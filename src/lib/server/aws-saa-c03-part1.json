{
    "title": "AWS Solutions Architect Associate SAA-C03 Certification Exam Questions (Part 1 of 6)",
    "description": "A collection of 100 practice questions for the AWS Certified Solutions Architect - Associate (SAA-C03) exam, part 1 of 6.",
    "certificationType": "Solutions Architect Associate",
    "questions": [
      {
        "questionText": "A company collects data for temperature, humidity, and atmospheric pressure in cities across multiple continents. The average volume of data that the company collects from each site daily is 500 GB. Each site has a high-speed Internet connection. The company wants to aggregate the data from all these global sites as quickly as possible in a single Amazon S3 bucket. The solution must minimize operational complexity. Which solution meets these requirements?",
        "explanation": "General line: Collect huge amount of the files across multiple continents\nConditions: High speed Internet connectivity\nTask: aggregate the data from all in a single S3 bucket\nRequirements: as quick as possible, minimize operational complexity\n\nCorrect answer A: S3 Transfer Acceleration because:\n- ideally works with objects for long-distance transfer (uses Edge Locations)\n- can speed up content transfers to and from S3 as much as 50-500%\n- use cases: mobile & web application uploads and downloads, distributed office transfers, data exchange with trusted partners. Generally for sharing of large data sets between companies, customers can set up special access to their S3 buckets with accelerated uploads to speed data exchanges and the pace of innovation.",
        "answers": [
          {
            "answerText": "Turn on S3 Transfer Acceleration on the destination S3 bucket. Use multipart uploads to directly upload site data to the destination S3 bucket.",
            "isCorrect": true
          },
          {
            "answerText": "Upload the data from each site to an S3 bucket in the closest Region. Use S3 Cross-Region Replication to copy objects to the destination S3 bucket. Then remove the data from the origin S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Schedule AWS Snowball Edge Storage Optimized device jobs daily to transfer data from each site to the closest Region. Use S3 Cross Region Replication to copy objects to the destination S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Upload the data from each site to an Amazon EC2 instance in the closest Region. Store the data in an Amazon Elastic Block Store (Amazon EBS) volume. At regular intervals, take an EBS snapshot and copy it to the Region that contains the destination S3 bucket. Restore the EBS volume in that Region.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company needs the ability to analyze the log files of its proprietary application. The logs are stored in JSON format in an Amazon S3 bucket. Queries will be simple and will run on-demand. A solutions architect needs to perform the analysis with minimal changes to the existing architecture. What should the solutions architect do to meet these requirements with the LEAST amount of operational overhead?",
        "explanation": "Amazon Athena is an interactive query service that makes it easy to analyze data directly in Amazon Simple Storage Service (Amazon S3) using standard SQL. With a few actions in the AWS Management Console, you can point Athena at your data stored in Amazon S3 and begin using standard SQL to run ad-hoc queries and get results in seconds.",
        "answers": [
          {
            "answerText": "Use Amazon Redshift to load all the content into one place and run the SQL queries as needed.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon CloudWatch Logs to store the logs. Run SQL queries as needed from the Amazon CloudWatch console.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Athena directly with Amazon S3 to run the queries as needed.",
            "isCorrect": true
          },
          {
            "answerText": "Use AWS Glue to catalog the logs. Use a transient Apache Spark cluster on Amazon EMR to run the SQL queries as needed.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company uses AWS Organizations to manage multiple AWS accounts for different departments. The management account has an Amazon S3 bucket that contains project reports. The company wants to limit access to this S3 bucket to only users of accounts within the organization in AWS Organizations. Which solution meets these requirements with the LEAST amount of operational overhead?",
        "explanation": "aws:PrincipalOrgID â€“ Simplifies specifying the Principal element in a resource-based policy. This global key provides an alternative to listing all the account IDs for all AWS accounts in an organization. Instead of listing all of the accounts that are members of an organization, you can specify the organization ID in the Condition element.\nproposes adding the aws PrincipalOrgID global condition key with a reference to the organization ID to the S3 bucket policy. This would limit access to the S3 bucket to only users of accounts within the organization in AWS Organizations, as the aws PrincipalOrgID condition key can check if the request is coming from within the organization.",
        "answers": [
          {
            "answerText": "Add the aws PrincipalOrgID global condition key with a reference to the organization ID to the S3 bucket policy.",
            "isCorrect": true
          },
          {
            "answerText": "Create an organizational unit (OU) for each department. Add the aws:PrincipalOrgPaths global condition key to the S3 bucket policy.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS CloudTrail to monitor the CreateAccount, InviteAccountToOrganization, LeaveOrganization, and RemoveAccountFromOrganization events. Update the S3 bucket policy accordingly.",
            "isCorrect": false
          },
          {
            "answerText": "Tag each user that needs access to the S3 bucket. Add the aws:PrincipalTag global condition key to the S3 bucket policy.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "An application runs on an Amazon EC2 instance in a VPC. The application processes logs that are stored in an Amazon S3 bucket. The EC2 instance needs to access the S3 bucket without connectivity to the internet. Which solution will provide private network connectivity to Amazon S3?",
        "explanation": "Keywords:\n- EC2 in VPC\n- EC2 instance needs to access the S3 bucket without connectivity to the internet\nVPC endpoint allows you to connect to AWS services using a private network instead of using the public Internet.\n\nWith a gateway endpoint, you can access Amazon S3 from your VPC, without requiring an internet gateway or NAT device for your VPC, and with no additional cost. However, gateway endpoints do not allow access from on-premises networks, from peered VPCs in other AWS Regions, or through a transit gateway.",
        "answers": [
          {
            "answerText": "Create a gateway VPC endpoint to the S3 bucket.",
            "isCorrect": true
          },
          {
            "answerText": "Stream the logs to Amazon CloudWatch Logs. Export the logs to the S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Create an instance profile on Amazon EC2 to allow S3 access.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon API Gateway API with a private link to access the S3 endpoint.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is hosting a web application on AWS using a single Amazon EC2 instance that stores user-uploaded documents in an Amazon EBS volume. For better scalability and availability, the company duplicated the architecture and created a second EC2 instance and EBS volume in another Availability Zone, placing both behind an Application Load Balancer. After completing this change, users reported that, each time they refreshed the website, they could see one subset of their documents or the other, but never all of the documents at the same time. What should a solutions architect propose to ensure users see all of their documents at once?",
        "explanation": "Option C, which involves copying the data to Amazon EFS and modifying the application to use Amazon EFS for document storage, is the most appropriate solution to ensure users can see all their documents at once in the duplicated architecture. Amazon EFS provides scalability, availability, and shared access, allowing both EC2 instances to access and synchronize the documents seamlessly.",
        "answers": [
          {
            "answerText": "Copy the data so both EBS volumes contain all the documents",
            "isCorrect": false
          },
          {
            "answerText": "Configure the Application Load Balancer to direct a user to the server with the documents",
            "isCorrect": false
          },
          {
            "answerText": "Copy the data from both EBS volumes to Amazon EFS. Modify the application to save new documents to Amazon EFS",
            "isCorrect": true
          },
          {
            "answerText": "Configure the Application Load Balancer to send the request to both servers. Return each document from the correct server",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company uses NFS to store large video files in on-premises network attached storage. Each video file ranges in size from 1 MB to 500 GB. The total storage is 70 TB and is no longer growing. The company decides to migrate the video files to Amazon S3. The company must migrate the video files as soon as possible while using the least possible network bandwidth. Which solution will meet these requirements?",
        "explanation": "On a Snowball Edge device you can copy files with a speed of up to 100Gbps. 70TB will take around 5600 seconds, so very quickly, less than 2 hours. The downside is that it'll take between 4-6 working days to receive the device and then another 2-3 working days to send it back and for AWS to move the data onto S3 once it reaches them. Total time: 6-9 working days. Bandwidth used: 0.",
        "answers": [
          {
            "answerText": "Create an S3 bucket. Create an IAM role that has permissions to write to the S3 bucket. Use the AWS CLI to copy all files locally to the S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Create an AWS Snowball Edge job. Receive a Snowball Edge device on premises. Use the Snowball Edge client to transfer data to the device. Return the device so that AWS can import the data into Amazon S3.",
            "isCorrect": true
          },
          {
            "answerText": "Deploy an S3 File Gateway on premises. Create a public service endpoint to connect to the S3 File Gateway. Create an S3 bucket. Create a new NFS file share on the S3 File Gateway. Point the new file share to the S3 bucket. Transfer the data from the existing NFS file share to the S3 File Gateway.",
            "isCorrect": false
          },
          {
            "answerText": "Set up an AWS Direct Connect connection between the on-premises network and AWS. Deploy an S3 File Gateway on premises. Create a public virtual interface (VIF) to connect to the S3 File Gateway. Create an S3 bucket. Create a new NFS file share on the S3 File Gateway. Point the new file share to the S3 bucket. Transfer the data from the existing NFS file share to the S3 File Gateway.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has an application that ingests incoming messages. Dozens of other applications and microservices then quickly consume these messages. The number of messages varies drastically and sometimes increases suddenly to 100,000 each second. The company wants to decouple the solution and increase scalability. Which solution meets these requirements?",
        "explanation": "an SQS queue can handle a maximum of 3,000 messages per second. However, you can request higher throughput by contacting AWS Support. AWS can increase the message throughput for your queue beyond the default limits in increments of 300 messages per second, up to a maximum of 10,000 messages per second.\n\nIt's important to note that the maximum number of messages per second that a queue can handle is not the same as the maximum number of requests per second that the SQS API can handle. The SQS API is designed to handle a high volume of requests per second, so it can be used to send messages to your queue at a rate that exceeds the maximum message throughput of the queue.",
        "answers": [
          {
            "answerText": "Persist the messages to Amazon Kinesis Data Analytics. Configure the consumer applications to read and process the messages.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy the ingestion application on Amazon EC2 instances in an Auto Scaling group to scale the number of EC2 instances based on CPU metrics.",
            "isCorrect": false
          },
          {
            "answerText": "Write the messages to Amazon Kinesis Data Streams with a single shard. Use an AWS Lambda function to preprocess messages and store them in Amazon DynamoDB. Configure the consumer applications to read from DynamoDB to process the messages.",
            "isCorrect": false
          },
          {
            "answerText": "Publish the messages to an Amazon Simple Notification Service (Amazon SNS) topic with multiple Amazon Simple Queue Service (Amazon SQS) subscriptions. Configure the consumer applications to process the messages from the queues.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company is migrating a distributed application to AWS. The application serves variable workloads. The legacy platform consists of a primary server that coordinates jobs across multiple compute nodes. The company wants to modernize the application with a solution that maximizes resiliency and scalability. How should a solutions architect design the architecture to meet these requirements?",
        "explanation": "Option B: This option provides a decoupled architecture where the jobs are sent to an SQS queue. The compute nodes (EC2 instances in an Auto Scaling group) can then process these jobs. Scaling based on the size of the SQS queue (the number of messages) allows the architecture to adapt to variable workloads, scaling out when the queue depth increases and scaling in when the depth decreases.",
        "answers": [
          {
            "answerText": "Configure an Amazon Simple Queue Service (Amazon SQS) queue as a destination for the jobs. Implement the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure EC2 Auto Scaling to use scheduled scaling.",
            "isCorrect": false
          },
          {
            "answerText": "Configure an Amazon Simple Queue Service (Amazon SQS) queue as a destination for the jobs. Implement the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure EC2 Auto Scaling based on the size of the queue.",
            "isCorrect": true
          },
          {
            "answerText": "Implement the primary server and the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure AWS CloudTrail as a destination for the jobs. Configure EC2 Auto Scaling based on the load on the primary server.",
            "isCorrect": false
          },
          {
            "answerText": "Implement the primary server and the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure Amazon EventBridge (Amazon CloudWatch Events) as a destination for the jobs. Configure EC2 Auto Scaling based on the load on the compute nodes.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is running an SMB file server in its data center. The file server stores large files that are accessed frequently for the first few days after the files are created. After 7 days the files are rarely accessed. The total data size is increasing and is close to the company's total storage capacity. A solutions architect must increase the company's available storage space without losing low-latency access to the most recently accessed files. The solutions architect must also provide file lifecycle management to avoid future storage issues. Which solution will meet these requirements?",
        "explanation": "Option B: Amazon S3 File Gateway provides a hybrid cloud storage solution, integrating on-premises environments with cloud storage. Files written to the file share are automatically saved as S3 objects. With S3 Lifecycle policies, you can transition objects between storage classes. Transitioning to Glacier Deep Archive is suitable for rarely accessed files. This solution addresses both the storage capacity and lifecycle management requirements.",
        "answers": [
          {
            "answerText": "Use AWS DataSync to copy data that is older than 7 days from the SMB file server to AWS.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon S3 File Gateway to extend the company's storage space. Create an S3 Lifecycle policy to transition the data to S3 Glacier Deep Archive after 7 days.",
            "isCorrect": true
          },
          {
            "answerText": "Create an Amazon FSx for Windows File Server file system to extend the company's storage space.",
            "isCorrect": false
          },
          {
            "answerText": "Install a utility on each user's computer to access Amazon S3. Create an S3 Lifecycle policy to transition the data to S3 Glacier Flexible Retrieval after 7 days.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is building an ecommerce web application on AWS. The application sends information about new orders to an Amazon API Gateway REST API to process. The company wants to ensure that orders are processed in the order that they are received. Which solution will meet these requirements?",
        "explanation": "Use an API Gateway integration to send a message to an Amazon Simple Queue Service (Amazon SQS) FIFO queue when the application receives an order. Configure the SQS FIFO queue to invoke an AWS Lambda function for processing.",
        "answers": [
          {
            "answerText": "Use an API Gateway integration to publish a message to an Amazon Simple Notification Service (Amazon SNS) topic when the application receives an order. Subscribe an AWS Lambda function to the topic to perform processing.",
            "isCorrect": false
          },
          {
            "answerText": "Use an API Gateway integration to send a message to an Amazon Simple Queue Service (Amazon SQS) FIFO queue when the application receives an order. Configure the SQS FIFO queue to invoke an AWS Lambda function for processing.",
            "isCorrect": true
          },
          {
            "answerText": "Use an API Gateway authorizer to block any requests while the application processes an order.",
            "isCorrect": false
          },
          {
            "answerText": "Use an API Gateway integration to send a message to an Amazon Simple Queue Service (Amazon SQS) standard queue when the application receives an order. Configure the SQS standard queue to invoke an AWS Lambda function for processing.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has an application that runs on Amazon EC2 instances and uses an Amazon Aurora database. The EC2 instances connect to the database by using user names and passwords that are stored locally in a file. The company wants to minimize the operational overhead of credential management. What should a solutions architect do to accomplish this goal?",
        "explanation": "AWS Secrets Manager is a secrets management service that helps you protect access to your applications, services, and IT resources. This service enables you to rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle.",
        "answers": [
          {
            "answerText": "Use AWS Secrets Manager. Turn on automatic rotation.",
            "isCorrect": true
          },
          {
            "answerText": "Use AWS Systems Manager Parameter Store. Turn on automatic rotation.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon S3 bucket to store objects that are encrypted with an AWS Key Management Service (AWS KMS) encryption key. Migrate the credential file to the S3 bucket. Point the application to the S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Create an encrypted Amazon Elastic Block Store (Amazon EBS) volume for each EC2 instance. Attach the new EBS volume to each EC2 instance. Migrate the credential file to the new EBS volume. Point the application to the new EBS volume.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A global company hosts its web application on Amazon EC2 instances behind an Application Load Balancer (ALB). The web application has static data and dynamic data. The company stores its static data in an Amazon S3 bucket. The company wants to improve performance and reduce latency for the static data and dynamic data. The company is using its own domain name registered with Amazon Route 53. What should a solutions architect do to meet these requirements?",
        "explanation": "CloudFront with Multiple Origins: CloudFront allows you to set up multiple origins for your distribution, so you can use both the ALB (for dynamic content) and the S3 bucket (for static content) as origins. This means that both your dynamic and static content can be served through CloudFront, which will cache content at edge locations to reduce latency.\nRoute 53 Integration with CloudFront: Amazon Route 53 can be easily configured to route traffic for your domain to a CloudFront distribution. Users will access your domain, and Route 53 will direct them to the nearest CloudFront edge location.",
        "answers": [
          {
            "answerText": "Create an Amazon CloudFront distribution that has the S3 bucket and the ALB as origins. Configure Route 53 to route traffic to the CloudFront distribution.",
            "isCorrect": true
          },
          {
            "answerText": "Create an Amazon CloudFront distribution that has the ALB as an origin. Create an AWS Global Accelerator standard accelerator that has the S3 bucket as an endpoint Configure Route 53 to route traffic to the CloudFront distribution.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon CloudFront distribution that has the S3 bucket as an origin. Create an AWS Global Accelerator standard accelerator that has the ALB and the CloudFront distribution as endpoints. Create a custom domain name that points to the accelerator DNS name. Use the custom domain name as an endpoint for the web application.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon CloudFront distribution that has the ALB as an origin. Create an AWS Global Accelerator standard accelerator that has the S3 bucket as an endpoint. Create two domain names. Point one domain name to the CloudFront DNS name for dynamic content. Point the other domain name to the accelerator DNS name for static content. Use the domain names as endpoints for the web application.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company performs monthly maintenance on its AWS infrastructure. During these maintenance activities, the company needs to rotate the credentials for its Amazon RDS for MySQL databases across multiple AWS Regions. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "AWS Secrets Manager allows you to store, manage, and rotate secrets, such as database credentials, across multiple AWS Regions. By enabling multi-Region secret replication, you can replicate the secrets across the required Regions to allow for seamless rotation of the credentials during maintenance activities. Additionally, Secrets Manager provides automatic rotation of secrets on a schedule, which would minimize the operational overhead of rotating the credentials on a monthly basis.",
        "answers": [
          {
            "answerText": "Store the credentials as secrets in AWS Secrets Manager. Use multi-Region secret replication for the required Regions. Configure Secrets Manager to rotate the secrets on a schedule.",
            "isCorrect": true
          },
          {
            "answerText": "Store the credentials as secrets in AWS Systems Manager by creating a secure string parameter. Use multi-Region secret replication for the required Regions. Configure Systems Manager to rotate the secrets on a schedule.",
            "isCorrect": false
          },
          {
            "answerText": "Store the credentials in an Amazon S3 bucket that has server-side encryption (SSE) enabled. Use Amazon EventBridge (Amazon CloudWatch Events) to invoke an AWS Lambda function to rotate the credentials.",
            "isCorrect": false
          },
          {
            "answerText": "Encrypt the credentials as secrets by using AWS Key Management Service (AWS KMS) multi-Region customer managed keys. Store the secrets in an Amazon DynamoDB global table. Use an AWS Lambda function to retrieve the secrets from DynamoDB. Use the RDS API to rotate the secrets.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company runs an ecommerce application on Amazon EC2 instances behind an Application Load Balancer. The instances run in an Amazon EC2 Auto Scaling group across multiple Availability Zones. The Auto Scaling group scales based on CPU utilization metrics. The ecommerce application stores the transaction data in a MySQL 8.0 database that is hosted on a large EC2 instance. The database's performance degrades quickly as application load increases. The application handles more read requests than write transactions. The company wants a solution that will automatically scale the database to meet the demand of unpredictable read workloads while maintaining high availability. Which solution will meet these requirements?",
        "explanation": "Option C: Using Amazon Aurora with a Multi-AZ deployment and configuring Aurora Auto Scaling with Aurora Replicas is the most appropriate solution. Aurora is a MySQL-compatible relational database engine that provides high performance and scalability. With Multi-AZ deployment, the database is automatically replicated across multiple Availability Zones for high availability.\nAurora Auto Scaling allows the database to automatically add or remove Aurora Replicas based on the workload, ensuring that read requests can be distributed effectively and the database can scale to meet demand. This provides both high availability and automatic scaling to handle unpredictable read workloads.",
        "answers": [
          {
            "answerText": "Use Amazon Redshift with a single node for leader and compute functionality.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon RDS with a Single-AZ deployment Configure Amazon RDS to add reader instances in a different Availability Zone.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Aurora with a Multi-AZ deployment. Configure Aurora Auto Scaling with Aurora Replicas.",
            "isCorrect": true
          },
          {
            "answerText": "Use Amazon ElastiCache for Memcached with EC2 Spot Instances.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company recently migrated to AWS and wants to implement a solution to protect the traffic that flows in and out of the production VPC. The company had an inspection server in its on-premises data center. The inspection server performed specific operations such as traffic flow inspection and traffic filtering. The company wants to have the same functionalities in the AWS Cloud. Which solution will meet these requirements?",
        "explanation": "AWS Network Firewall is a managed firewall service that provides filtering for both inbound and outbound network traffic. It allows you to create rules for traffic inspection and filtering, which can help protect your production VPC",
        "answers": [
          {
            "answerText": "Use Amazon GuardDuty for traffic inspection and traffic filtering in the production VPC.",
            "isCorrect": false
          },
          {
            "answerText": "Use Traffic Mirroring to mirror traffic from the production VPC for traffic inspection and filtering.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Network Firewall to create the required rules for traffic inspection and traffic filtering for the production VPC.",
            "isCorrect": true
          },
          {
            "answerText": "Use AWS Firewall Manager to create the required rules for traffic inspection and traffic filtering for the production VPC.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company hosts a data lake on AWS. The data lake consists of data in Amazon S3 and Amazon RDS for PostgreSQL. The company needs a reporting solution that provides data visualization and includes all the data sources within the data lake. Only the company's management team should have full access to all the visualizations. The rest of the company should have only limited access. Which solution will meet these requirements?",
        "explanation": "using Amazon QuickSight, which is a business intelligence tool provided by AWS for data visualization and reporting. With this option, you can connect all the data sources within the data lake, including Amazon S3 and Amazon RDS for PostgreSQL. You can create datasets within QuickSight that pull data from these sources.",
        "answers": [
          {
            "answerText": "Create an analysis in Amazon QuickSight. Connect all the data sources and create new datasets. Publish dashboards to visualize the data. Share the dashboards with the appropriate IAM roles.",
            "isCorrect": false
          },
          {
            "answerText": "Create an analysis in Amazon QuickSight. Connect all the data sources and create new datasets. Publish dashboards to visualize the data. Share the dashboards with the appropriate users and groups.",
            "isCorrect": true
          },
          {
            "answerText": "Create an AWS Glue table and crawler for the data in Amazon S3. Create an AWS Glue extract, transform, and load (ETL) job to produce reports. Publish the reports to Amazon S3. Use S3 bucket policies to limit access to the reports.",
            "isCorrect": false
          },
          {
            "answerText": "Create an AWS Glue table and crawler for the data in Amazon S3. Use Amazon Athena Federated Query to access data within Amazon RDS for PostgreSQL. Generate reports by using Amazon Athena. Publish the reports to Amazon S3. Use S3 bucket policies to limit access to the reports.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is implementing a new business application. The application runs on two Amazon EC2 instances and uses an Amazon S3 bucket for document storage. A solutions architect needs to ensure that the EC2 instances can access the S3 bucket. What should the solutions architect do to meet this requirement?",
        "explanation": "An IAM role is an AWS resource that allows you to delegate access to AWS resources and services. You can create an IAM role that grants access to the S3 bucket and then attach the role to the EC2 instances. This will allow the EC2 instances to access the S3 bucket and the documents stored within it.",
        "answers": [
          {
            "answerText": "Create an IAM role that grants access to the S3 bucket. Attach the role to the EC2 instances.",
            "isCorrect": true
          },
          {
            "answerText": "Create an IAM policy that grants access to the S3 bucket. Attach the policy to the EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Create an IAM group that grants access to the S3 bucket. Attach the group to the EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Create an IAM user that grants access to the S3 bucket. Attach the user account to the EC2 instances.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "An application development team is designing a microservice that will convert large images to smaller, compressed images. When a user uploads an image through the web interface, the microservice should store the image in an Amazon S3 bucket, process and compress the image with an AWS Lambda function, and store the image in its compressed form in a different S3 bucket. A solutions architect needs to design a solution that uses durable, stateless components to process the images automatically. Which combination of actions will meet these requirements? (Select TWO.)",
        "explanation": "Option A: By creating an Amazon SQS queue and configuring the S3 bucket to send a notification to the SQS queue when an image is uploaded, the system establishes a durable and scalable way to handle incoming image processing tasks.\n\nOption B: Configuring the Lambda function to use the SQS queue as the invocation source allows it to retrieve messages from the queue and process them in a stateless manner. After successfully processing the image, the Lambda function can delete the message from the queue to avoid duplicate processing.",
        "answers": [
          {
            "answerText": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Configure the S3 bucket to send a notification to the SQS queue when an image is uploaded to the S3 bucket.",
            "isCorrect": true
          },
          {
            "answerText": "Configure the Lambda function to use the Amazon Simple Queue Service (Amazon SQS) queue as the invocation source. When the SQS message is successfully processed, delete the message in the queue.",
            "isCorrect": true
          },
          {
            "answerText": "Configure the Lambda function to monitor the S3 bucket for new uploads. When an uploaded image is detected, write the file name to a text file in memory and use the text file to keep track of the images that were processed.",
            "isCorrect": false
          },
          {
            "answerText": "Launch an Amazon EC2 instance to monitor an Amazon Simple Queue Service (Amazon SQS) queue. When items are added to the queue, log the file name in a text file on the EC2 instance and invoke the Lambda function.",
            "isCorrect": false
          },
          {
            "answerText": "Configure an Amazon EventBridge (Amazon CloudWatch Events) event to monitor the S3 bucket. When an image is uploaded, send an alert to an Amazon ample Notification Service (Amazon SNS) topic with the application owner's email address for further processing.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has a three-tier web application that is deployed on AWS. The web servers are deployed in a public subnet in a VPC. The application servers and database servers are deployed in private subnets in the same VPC. The company has deployed a third-party virtual firewall appliance from AWS Marketplace in an inspection VPC. The appliance is configured with an IP interface that can accept IP packets. A solutions architect needs to integrate the web application with the appliance to inspect all traffic to the application before the traffic reaches the web server. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "Gateway Load Balancer is a new type of load balancer that operates at layer 3 of the OSI model and is built on Hyperplane, which is capable of handling several thousands of connections per second. Gateway Load Balancer endpoints are configured in spoke VPCs originating or receiving traffic from the Internet. This architecture allows you to perform inline inspection of traffic from multiple spoke VPCs in a simplified and scalable fashion while still centralizing your virtual appliances.",
        "answers": [
          {
            "answerText": "Create a Network Load Balancer in the public subnet of the application's VPC to route the traffic to the appliance for packet inspection.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Application Load Balancer in the public subnet of the application's VPC to route the traffic to the appliance for packet inspection.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy a transit gateway in the inspection VPC. Configure route tables to route the incoming packets through the transit gateway.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy a Gateway Load Balancer in the inspection VPC. Create a Gateway Load Balancer endpoint to receive the incoming packets and forward the packets to the appliance.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company wants to improve its ability to clone large amounts of production data into a test environment in the same AWS Region. The data is stored in Amazon EC2 instances on Amazon Elastic Block Store (Amazon EBS) volumes. Modifications to the cloned data must not affect the production environment. The software that accesses this data requires consistently high I/O performance. A solutions architect needs to minimize the time that is required to clone the production data into the test environment. Which solution will meet these requirements?",
        "explanation": "Amazon EBS fast snapshot restore (FSR) enables you to create a volume from a snapshot that is fully initialized at creation. This eliminates the latency of I/O operations on a block when it is accessed for the first time. Volumes that are created using fast snapshot restore instantly deliver all of their provisioned performance",
        "answers": [
          {
            "answerText": "Take EBS snapshots of the production EBS volumes. Restore the snapshots onto EC2 instance store volumes in the test environment.",
            "isCorrect": false
          },
          {
            "answerText": "Configure the production EBS volumes to use the EBS Multi-Attach feature. Take EBS snapshots of the production EBS volumes. Attach the production EBS volumes to the EC2 instances in the test environment.",
            "isCorrect": false
          },
          {
            "answerText": "Take EBS snapshots of the production EBS volumes. Create and initialize new EBS volumes. Attach the new EBS volumes to EC2 instances in the test environment before restoring the volumes from the production EBS snapshots.",
            "isCorrect": false
          },
          {
            "answerText": "Take EBS snapshots of the production EBS volumes. Turn on the EBS fast snapshot restore feature on the EBS snapshots. Restore the snapshots into new EBS volumes. Attach the new EBS volumes to EC2 instances in the test environment.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "An ecommerce company wants to launch a one-deal-a-day website on AWS. Each day will feature exactly one product on sale for a period of 24 hours. The company wants to be able to handle millions of requests each hour with millisecond latency during peak hours. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "Use an Amazon S3 bucket to host the website's static content, deploy an Amazon CloudFront distribution, set the S3 bucket as the origin, and use Amazon API Gateway and AWS Lambda functions for the backend APIs. Store the data in Amazon DynamoDB.\n\nUsing Amazon S3 to host static content and Amazon CloudFront to distribute the content can provide high performance and scale for websites with millions of requests each hour. Amazon API Gateway and AWS Lambda can be used to build scalable and highly available backend APIs to support the website, and Amazon DynamoDB can be used to store the data. This solution requires minimal operational overhead as it leverages fully managed services that automatically scale to meet demand.",
        "answers": [
          {
            "answerText": "Use Amazon S3 to host the full website in different S3 buckets. Add Amazon CloudFront distributions. Set the S3 buckets as origins for the distributions. Store the order data in Amazon S3.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy the full website on Amazon EC2 instances that run in Auto Scaling groups across multiple Availability Zones. Add an Application Load Balancer (ALB) to distribute the website traffic. Add another ALB for the backend APIs. Store the data in Amazon RDS for MySQL.",
            "isCorrect": false
          },
          {
            "answerText": "Migrate the full application to run in containers. Host the containers on Amazon Elastic Kubernetes Service (Amazon EKS). Use the Kubernetes Cluster Autoscaler to increase and decrease the number of pods to process bursts in traffic. Store the data in Amazon RDS for MySQL.",
            "isCorrect": false
          },
          {
            "answerText": "Use an Amazon S3 bucket to host the website's static content. Deploy an Amazon CloudFront distribution. Set the S3 bucket as the origin. Use Amazon API Gateway and AWS Lambda functions for the backend APIs. Store the data in Amazon DynamoDB.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A solutions architect is using Amazon S3 to design the storage architecture of a new digital media application. The media files must be resilient to the loss of an Availability Zone. Some files are accessed frequently while other files are rarely accessed in an unpredictable pattern. The solutions architect must minimize the costs of storing and retrieving the media files. Which storage option meets these requirements?",
        "explanation": "Amazon S3 Intelligent Tiering is a storage class that automatically moves data to the most cost-effective storage tier based on access patterns. It can store objects in two access tiers: the frequent access tier and the infrequent access tier. The frequent access tier is optimized for frequently accessed objects and is charged at the same rate as S3 Standard. The infrequent access tier is optimized for objects that are not accessed frequently and are charged at a lower rate than S3 Standard.\n\nS3 Intelligent Tiering is a good choice for storing media files that are accessed frequently and infrequently in an unpredictable pattern because it automatically moves data to the most cost-effective storage tier based on access patterns, minimizing storage and retrieval costs. It is also resilient to the loss of an Availability Zone because it stores objects in multiple Availability Zones within a region.",
        "answers": [
          {
            "answerText": "S3 Standard",
            "isCorrect": false
          },
          {
            "answerText": "S3 Intelligent-Tiering",
            "isCorrect": true
          },
          {
            "answerText": "S3 Standard-Infrequent Access (S3 Standard-IA)",
            "isCorrect": false
          },
          {
            "answerText": "S3 One Zone-Infrequent Access (S3 One Zone-IA)",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is storing backup files by using Amazon S3 Standard storage. The files are accessed frequently for 1 month. However, the files are not accessed after 1 month. The company must keep the files indefinitely. Which storage solution will meet these requirements MOST cost-effectively?",
        "explanation": "Amazon S3 Glacier Deep Archive is a secure, durable, and extremely low-cost Amazon S3 storage class for long-term retention of data that is rarely accessed and for which retrieval times of several hours are acceptable. It is the lowest-cost storage option in Amazon S3, making it a cost-effective choice for storing backup files that are not accessed after 1 month.\n\nYou can use an S3 Lifecycle configuration to automatically transition objects from S3 Standard to S3 Glacier Deep Archive after 1 month. This will minimize the storage costs for the backup files that are not accessed frequently.",
        "answers": [
          {
            "answerText": "Configure S3 Intelligent-Tiering to automatically migrate objects.",
            "isCorrect": false
          },
          {
            "answerText": "Create an S3 Lifecycle configuration to transition objects from S3 Standard to S3 Glacier Deep Archive after 1 month.",
            "isCorrect": true
          },
          {
            "answerText": "Create an S3 Lifecycle configuration to transition objects from S3 Standard to S3 Standard-Infrequent Access (S3 Standard-IA) after 1 month.",
            "isCorrect": false
          },
          {
            "answerText": "Create an S3 Lifecycle configuration to transition objects from S3 Standard to S3 One Zone-Infrequent Access (S3 One Zone-IA) after 1 month.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company observes an increase in Amazon EC2 costs in its most recent bill. The billing team notices unwanted vertical scaling of instance types for a couple of EC2 instances. A solutions architect needs to create a graph comparing the last 2 months of EC2 costs and perform an in-depth analysis to identify the root cause of the vertical scaling. How should the solutions architect generate the information with the LEAST operational overhead?",
        "explanation": "Using Cost Explorer's granular filtering feature allows the solutions architect to perform an in-depth analysis of EC2 costs based on instance types with the LEAST operational overhead. This approach provides a focused and efficient way to identify the root cause of the vertical scaling without requiring manual data export or additional tool setup.",
        "answers": [
          {
            "answerText": "Use AWS Budgets to create a budget report and compare EC2 costs based on instance types.",
            "isCorrect": false
          },
          {
            "answerText": "Use Cost Explorer's granular filtering feature to perform an in-depth analysis of EC2 costs based on instance types.",
            "isCorrect": true
          },
          {
            "answerText": "Use graphs from the AWS Billing and Cost Management dashboard to compare EC2 costs based on instance types for the last 2 months.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Cost and Usage Reports to create a report and send it to an Amazon S3 bucket. Use Amazon QuickSight with Amazon S3 as a source to generate an interactive graph based on instance types.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is designing an application. The application uses an AWS Lambda function to receive information through Amazon API Gateway and to store the information in an Amazon Aurora PostgreSQL database. During the proof-of-concept stage, the company has to increase the Lambda quotas significantly to handle the high volumes of data that the company needs to load into the database. A solutions architect must recommend a new design to improve scalability and minimize the configuration effort. Which solution will meet these requirements?",
        "explanation": "\"By dividing the functionality into two Lambda functions, one for receiving the information and the other for loading it into the database, you can independently scale and optimize each function based on their specific requirements. This approach allows for more efficient resource allocation and reduces the potential impact of high volumes of data on the overall system.",
        "answers": [
          {
            "answerText": "Refactor the Lambda function code to Apache Tomcat code that runs on Amazon EC2 instances. Connect the database by using native Java Database Connectivity (JDBC) drivers.",
            "isCorrect": false
          },
          {
            "answerText": "Change the platform from Aurora to Amazon DynamoDB. Provision a DynamoDB Accelerator (DAX) cluster. Use the DAX client SDK to point the existing DynamoDB API calls at the DAX cluster.",
            "isCorrect": false
          },
          {
            "answerText": "Set up two Lambda functions. Configure one function to receive the information. Configure the other function to load the information into the database. Integrate the Lambda functions by using Amazon Simple Notification Service (Amazon SNS).",
            "isCorrect": false
          },
          {
            "answerText": "Set up two Lambda functions. Configure one function to receive the information. Configure the other function to load the information into the database. Integrate the Lambda functions by using an Amazon Simple Queue Service (Amazon SQS) queue.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company needs to review its AWS Cloud deployment to ensure that its Amazon S3 buckets do not have unauthorized configuration changes. What should a solutions architect do to accomplish this goal?",
        "explanation": "AWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources. You can use AWS Config to monitor and record changes to the configuration of your Amazon S3 buckets. By turning on AWS Config and enabling the appropriate rules, you can ensure that your S3 buckets do not have unauthorized configuration changes.",
        "answers": [
          {
            "answerText": "Turn on AWS Config with the appropriate rules.",
            "isCorrect": true
          },
          {
            "answerText": "Turn on AWS Trusted Advisor with the appropriate checks.",
            "isCorrect": false
          },
          {
            "answerText": "Turn on Amazon Inspector with the appropriate assessment template.",
            "isCorrect": false
          },
          {
            "answerText": "Turn on Amazon S3 server access logging. Configure Amazon EventBridge (Amazon Cloud Watch Events).",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is launching a new application and will display application metrics on an Amazon CloudWatch dashboard. The company's product manager needs to access this dashboard periodically. The product manager does not have an AWS account. A solutions architect must provide access to the product manager by following the principle of least privilege. Which solution will meet these requirements?",
        "explanation": "Share a single dashboard and designate specific email addresses of the people who can view the dashboard. Each of these users creates their own password that they must enter to view the dashboard.",
        "answers": [
          {
            "answerText": "Share the dashboard from the CloudWatch console. Enter the product manager's email address, and complete the sharing steps. Provide a shareable link for the dashboard to the product manager.",
            "isCorrect": true
          },
          {
            "answerText": "Create an IAM user specifically for the product manager. Attach the CloudWatchReadOnlyAccess AWS managed policy to the user. Share the new login credentials with the product manager. Share the browser URL of the correct dashboard with the product manager.",
            "isCorrect": false
          },
          {
            "answerText": "Create an IAM user for the company's employees. Attach the ViewOnlyAccess AWS managed policy to the IAM user. Share the new login credentials with the product manager. Ask the product manager to navigate to the CloudWatch console and locate the dashboard by name in the Dashboards section.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy a bastion server in a public subnet. When the product manager requires access to the dashboard, start the server and share the RDP credentials. On the bastion server, ensure that the browser is configured to open the dashboard URL with cached AWS credentials that have appropriate permissions to view the dashboard.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is migrating applications to AWS. The applications are deployed in different accounts. The company manages the accounts centrally by using AWS Organizations. The company's security team needs a single sign-on (SSO) solution across all the company's accounts. The company must continue managing the users and groups in its on-premises self-managed Microsoft Active Directory. Which solution will meet these requirements?",
        "explanation": "Enabling AWS Single Sign-On (SSO) and creating a one-way forest trust or domain trust with the on-premises Active Directory is the correct approach. This setup allows users to authenticate using their existing on-premises credentials and provides a single sign-on experience across AWS accounts.",
        "answers": [
          {
            "answerText": "Enable AWS Single Sign-On (AWS SSO) from the AWS SSO console. Create a one-way forest trust or a one-way domain trust to connect the company's self-managed Microsoft Active Directory with AWS SSO by using AWS Directory Service for Microsoft Active Directory.",
            "isCorrect": true
          },
          {
            "answerText": "Enable AWS Single Sign-On (AWS SSO) from the AWS SSO console. Create a two-way forest trust to connect the company's self-managed Microsoft Active Directory with AWS SSO by using AWS Directory Service for Microsoft Active Directory.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Directory Service. Create a two-way trust relationship with the company's self-managed Microsoft Active Directory.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy an identity provider (IdP) on premises. Enable AWS Single Sign-On (AWS SSO) from the AWS SSO console.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company provides a Voice over Internet Protocol (VoIP) service that uses UDP connections. The service consists of Amazon EC2 instances that run in an Auto Scaling group. The company has deployments across multiple AWS Regions. The company needs to route users to the Region with the lowest latency. The company also needs automated failover between Regions. Which solution will meet these requirements?",
        "explanation": "Answer A does not mention service Global Accelerator, it mentions the NLB would act like one. Not sure if the wording is wrong or not.\n' Deploy a Network Load Balancer (NLB) and an associated target group. Associate the target group with the Auto Scaling group. Use the NLB as an AWS Global Accelerator endpoint in each Region.",
        "answers": [
          {
            "answerText": "Deploy a Network Load Balancer (NLB) and an associated target group. Associate the target group with the Auto Scaling group. Use the NLB as an AWS Global Accelerator endpoint in each Region.",
            "isCorrect": true
          },
          {
            "answerText": "Deploy an Application Load Balancer (ALB) and an associated target group. Associate the target group with the Auto Scaling group. Use the ALB as an AWS Global Accelerator endpoint in each Region.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy a Network Load Balancer (NLB) and an associated target group. Associate the target group with the Auto Scaling group. Create an Amazon Route 53 latency record that points to aliases for each NLB. Create an Amazon CloudFront distribution that uses the latency record as an origin.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy an Application Load Balancer (ALB) and an associated target group. Associate the target group with the Auto Scaling group. Create an Amazon Route 53 weighted record that points to aliases for each ALB. Deploy an Amazon CloudFront distribution that uses the weighted record as an origin.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A development team runs monthly resource-intensive tests on its general purpose Amazon RDS for MySQL DB instance with Performance Insights enabled. The testing lasts for 48 hours once a month and is the only process that uses the database. The team wants to reduce the cost of running the tests without reducing the compute and memory attributes of the DB instance. Which solution meets these requirements MOST cost-effectively?",
        "explanation": "By creating a snapshot and terminating the DB instance, you effectively stop incurring costs for the running instance. When you need to run the tests again, you can restore the snapshot to create a new instance and resume testing. This approach allows you to save costs during the periods when the tests are not running.",
        "answers": [
          {
            "answerText": "Stop the DB instance when tests are completed. Restart the DB instance when required.",
            "isCorrect": false
          },
          {
            "answerText": "Use an Auto Scaling policy with the DB instance to automatically scale when tests are completed.",
            "isCorrect": false
          },
          {
            "answerText": "Create a snapshot when tests are completed. Terminate the DB instance and restore the snapshot when required.",
            "isCorrect": true
          },
          {
            "answerText": "Modify the DB instance to a low-capacity instance when tests are completed. Modify the DB instance again when required.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company that hosts its web application on AWS wants to ensure all Amazon EC2 instances, Amazon RDS DB instances, and Amazon Redshift clusters are configured with tags. The company wants to minimize the effort of configuring and operating this check. What should a solutions architect do to accomplish this?",
        "explanation": "Yes, you can use AWS Config to create tags for your resources. AWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources. You can use AWS Config to create rules that automatically tag resources when they are created or when their configurations change.",
        "answers": [
          {
            "answerText": "Use AWS Config rules to define and detect resources that are not properly tagged.",
            "isCorrect": true
          },
          {
            "answerText": "Use Cost Explorer to display resources that are not properly tagged. Tag those resources manually.",
            "isCorrect": false
          },
          {
            "answerText": "Write API calls to check all resources for proper tag allocation. Periodically run the code on an EC2 instance.",
            "isCorrect": false
          },
          {
            "answerText": "Write API calls to check all resources for proper tag allocation. Schedule an AWS Lambda function through Amazon CloudWatch to periodically run the code.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A development team needs to host a website that will be accessed by other teams. The website contents consist of HTML, CSS, client-side JavaScript, and images. Which method is the MOST cost-effective for hosting the website?",
        "explanation": "The MOST cost-effective method for hosting a website is to:\nCreate an Amazon S3 bucket and host the website there.\nAmazon S3 is a highly scalable and cost-effective object storage service. It is a good option for hosting static websites, such as the website in this scenario.C is the best solution for the following reasons:\nTo host a static website on Amazon S3, you would first need to create an S3 bucket. Then, you would need to upload the website files to the bucket. Once the files are uploaded, you can configure the bucket to serve as a website.",
        "answers": [
          {
            "answerText": "Containerize the website and host it in AWS Fargate.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon S3 bucket and host the website there.",
            "isCorrect": true
          },
          {
            "answerText": "Deploy a web server on an Amazon EC2 instance to host the website.",
            "isCorrect": false
          },
          {
            "answerText": "Configure an Application Load Balancer with an AWS Lambda target that uses the Express.js framework.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company runs an online marketplace web application on AWS. The application serves hundreds of thousands of users during peak hours. The company needs a scalable, near-real-time solution to share the details of millions of financial transactions with several other internal applications. Transactions also need to be processed to remove sensitive data before being stored in a document database for low-latency retrieval. What should a solutions architect recommend to meet these requirements?",
        "explanation": "1. Real-time Data Stream: To share millions of financial transactions with other apps, you need to be able to ingest data in real-time, which is made possible by Amazon Kinesis Data Streams.\n\n2. Data Transformation: You can cleanse and eliminate sensitive data from transactions before storing them in Amazon DynamoDB by utilizing AWS Lambda with Kinesis Data Streams. This takes care of the requirement to handle sensitive data with care.\n3. Scalability: DynamoDB and Amazon Kinesis are both extremely scalable technologies that can manage enormous data volumes and adjust to the workload.",
        "answers": [
          {
            "answerText": "Store the transactions data into Amazon DynamoDB. Set up a rule in DynamoDB to remove sensitive data from every transaction upon write. Use DynamoDB Streams to share the transactions data with other applications.",
            "isCorrect": false
          },
          {
            "answerText": "Stream the transactions data into Amazon Kinesis Data Firehose to store data in Amazon DynamoDB and Amazon S3. Use AWS Lambda integration with Kinesis Data Firehose to remove sensitive data. Other applications can consume the data stored in Amazon S3.",
            "isCorrect": false
          },
          {
            "answerText": "Stream the transactions data into Amazon Kinesis Data Streams. Use AWS Lambda integration to remove sensitive data from every transaction and then store the transactions data in Amazon DynamoDB. Other applications can consume the transactions data off the Kinesis data stream.",
            "isCorrect": true
          },
          {
            "answerText": "Store the batched transactions data in Amazon S3 as files. Use AWS Lambda to process every file and remove sensitive data before updating the files in Amazon S3. The Lambda function then stores the data in Amazon DynamoDB. Other applications can consume transaction files stored in Amazon S3.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company hosts its multi-tier applications on AWS. For compliance, governance, auditing, and security, the company must track configuration changes on its AWS resources and record a history of API calls made to these resources. What should a solutions architect do to meet these requirements?",
        "explanation": "AWS Config for Configuration Changes: AWS Config is a service that tracks changes to resource configurations over time. It provides a history of configuration changes to your AWS resources and helps with compliance and auditing by allowing you to assess how resource configurations have changed over time.\n\nAWS CloudTrail for API Calls: AWS CloudTrail is designed specifically for recording API calls made to AWS resources. It captures detailed information about who made each API call, the actions taken, and the resources affected. This is essential for auditing and security purposes.",
        "answers": [
          {
            "answerText": "Use AWS CloudTrail to track configuration changes and AWS Config to record API calls.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Config to track configuration changes and AWS CloudTrail to record API calls.",
            "isCorrect": true
          },
          {
            "answerText": "Use AWS Config to track configuration changes and Amazon CloudWatch to record API calls.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS CloudTrail to track configuration changes and Amazon CloudWatch to record API calls.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is preparing to launch a public-facing web application in the AWS Cloud. The architecture consists of Amazon EC2 instances within a VPC behind an Elastic Load Balancer (ELB). A third-party service is used for the DNS. The company's solutions architect must recommend a solution to detect and protect against large-scale DDoS attacks. Which solution meets these requirements?",
        "explanation": "AWS Shield Advanced provides expanded DDoS attack protection for your Amazon EC2 instances, Elastic Load Balancing load balancers, CloudFront distributions, Route 53 hosted zones, and AWS Global Accelerator standard accelerators.",
        "answers": [
          {
            "answerText": "Enable Amazon GuardDuty on the account.",
            "isCorrect": false
          },
          {
            "answerText": "Enable Amazon Inspector on the EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Enable AWS Shield and assign Amazon Route 53 to it.",
            "isCorrect": false
          },
          {
            "answerText": "Enable AWS Shield Advanced and assign the ELB to it.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company is building an application in the AWS Cloud. The application will store data in Amazon S3 buckets in two AWS Regions. The company must use an AWS Key Management Service (AWS KMS) customer managed key to encrypt all data that is stored in the S3 buckets. The data in both S3 buckets must be encrypted and decrypted with the same KMS key. The data and the key must be stored in each of the two Regions. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "To meet the requirements of using the same customer-managed KMS key for S3 server-side encryption (SSE-KMS) in two different AWS Regions with the least operational overhead: \n1. Create a **multi-Region KMS key**. This key type allows the same key material to be used across multiple specified AWS Regions. You create a primary multi-Region key in one Region and then replicate it to other Regions, creating replica keys that share the same key ID and key material. \n2. In each of the two Regions, create an S3 bucket. \n3. Configure the S3 buckets in each Region to use SSE-KMS, pointing to the respective regional replica of your multi-Region KMS key. \n4. Configure S3 Cross-Region Replication (CRR) between the S3 buckets. S3 CRR handles the replication of objects encrypted with multi-Region KMS keys correctly, ensuring they remain encrypted with the same logical key in the destination. \nThis approach minimizes application-side complexity (compared to client-side encryption) and allows AWS to manage the key material replication and server-side encryption process, thus reducing operational overhead.",
        "answers": [
          {
            "answerText": "Create an S3 bucket in each Region. Configure the S3 buckets to use server-side encryption with Amazon S3 managed encryption keys (SSE-S3). Configure replication between the S3 buckets.",
            "isCorrect": false
          },
          {
            "answerText": "Create a customer managed multi-Region KMS key. Create an S3 bucket in each Region. Configure replication between the S3 buckets. Configure the application to use the KMS key with client-side encryption.",
            "isCorrect": false
          },
          {
            "answerText": "Create a customer managed KMS key and an S3 bucket in each Region. Configure the S3 buckets to use server-side encryption with Amazon S3 managed encryption keys (SSE-S3). Configure replication between the S3 buckets.",
            "isCorrect": false
          },
          {
            "answerText": "Create a customer managed KMS key and an S3 bucket in each Region. Configure the S3 buckets to use server-side encryption with AWS KMS keys (SSE-KMS). Configure replication between the S3 buckets.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company recently launched a variety of new workloads on Amazon EC2 instances in its AWS account. The company needs to create a strategy to access and administer the instances remotely and securely. The company needs to implement a repeatable process that works with native AWS services and follows the AWS Well-Architected Framework. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "With AWS Systems Manager Session Manager, you can manage your Amazon Elastic Compute Cloud (Amazon EC2) instances, edge devices, on-premises servers, and virtual machines (VMs). You can use either an interactive one-click browser-based shell or the AWS Command Line Interface (AWS CLI). It provides secure and auditable node management without the need to open inbound ports, maintain bastion hosts, or manage SSH keys.",
        "answers": [
          {
            "answerText": "Use the EC2 serial console to directly access the terminal interface of each instance for administration.",
            "isCorrect": false
          },
          {
            "answerText": "Attach the appropriate IAM role to each existing instance and new instance. Use AWS Systems Manager Session Manager to establish a remote SSH session.",
            "isCorrect": true
          },
          {
            "answerText": "Create an administrative SSH key pair. Load the public key into each EC2 instance. Deploy a bastion host in a public subnet to provide a tunnel for administration of each instance.",
            "isCorrect": false
          },
          {
            "answerText": "Establish an AWS Site-to-Site VPN connection. Instruct administrators to use their local on-premises machines to connect directly to the instances by using SSH keys across the VPN tunnel.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is hosting a static website on Amazon S3 and is using Amazon Route 53 for DNS. The website is experiencing increased demand from around the world. The company must decrease latency for users who access the website. Which solution meets these requirements MOST cost-effectively?",
        "explanation": "Amazon CloudFront is a content delivery network (CDN) service that distributes content globally to reduce latency. By setting up a CloudFront distribution in front of the S3 bucket hosting the static website, you can take advantage of its edge locations around the world to deliver content from the nearest location to the users, reducing the latency they experience.\n\nCloudFront automatically caches and replicates content to its edge locations, resulting in faster delivery and lower latency for users worldwide. This solution is highly effective in optimizing performance while keeping costs under control because CloudFront charges are based on actual data transfer and requests, and the pay-as-you-go pricing model ensures that you only pay for what you use.",
        "answers": [
          {
            "answerText": "Replicate the S3 bucket that contains the website to all AWS Regions. Add Route 53 geolocation routing entries.",
            "isCorrect": false
          },
          {
            "answerText": "Provision accelerators in AWS Global Accelerator. Associate the supplied IP addresses with the S3 bucket. Edit the Route 53 entries to point to the IP addresses of the accelerators.",
            "isCorrect": false
          },
          {
            "answerText": "Add an Amazon CloudFront distribution in front of the S3 bucket. Edit the Route 53 entries to point to the CloudFront distribution.",
            "isCorrect": true
          },
          {
            "answerText": "Enable S3 Transfer Acceleration on the bucket. Edit the Route 53 entries to point to the new endpoint.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company maintains a searchable repository of items on its website. The data is stored in an Amazon RDS for MySQL database table that contains more than 10 million rows. The database has 2 TB of General Purpose SSD storage. There are millions of updates against this data every day through the company's website. The company has noticed that some insert operations are taking 10 seconds or longer. The company has determined that the database storage performance is the problem. Which solution addresses this performance issue?",
        "explanation": "Using Amazon Provisioned IOPS (PIOPS) SSD storage is the best way to solve the performance issue of insert operations taking 10 seconds or longer on an Amazon RDS for MySQL database table with more than 10 million rows and 2 TB of General Purpose SSD storage.\n\nA high-performance storage solution with reliable throughput and minimal latency is PIOPS SSD storage. Workloads like insert operations, which demand high I/O performance, are ideally suited for it.",
        "answers": [
          {
            "answerText": "Change the storage type to Provisioned IOPS SSD.",
            "isCorrect": true
          },
          {
            "answerText": "Change the DB instance to a memory optimized instance class.",
            "isCorrect": false
          },
          {
            "answerText": "Change the DB instance to a burstable performance instance class.",
            "isCorrect": false
          },
          {
            "answerText": "Enable Multi-AZ RDS read replicas with MySQL native asynchronous replication.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has thousands of edge devices that collectively generate 1 TB of status alerts each day. Each alert is approximately 2 KB in size. A solutions architect needs to implement a solution to ingest and store the alerts for future analysis. The company wants a highly available solution. However, the company needs to minimize costs and does not want to manage additional infrastructure. Additionally, the company wants to keep 14 days of data available for immediate analysis and archive any data older than 14 days. What is the MOST operationally efficient solution that meets these requirements?",
        "explanation": "Amazon Kinesis Data Firehose is a fully managed service that can capture, transform, and deliver streaming data into storage systems or analytics tools, making it an ideal solution for ingesting and storing status alerts. In this solution, the Kinesis Data Firehose delivery stream ingests the alerts and delivers them to an S3 bucket, which is a cost-effective storage solution. An S3 Lifecycle configuration is set up to transition the data to Amazon S3 Glacier after 14 days to minimize storage costs.",
        "answers": [
          {
            "answerText": "Create an Amazon Kinesis Data Firehose delivery stream to ingest the alerts. Configure the Kinesis Data Firehose stream to deliver the alerts to an Amazon S3 bucket. Set up an S3 Lifecycle configuration to transition data to Amazon S3 Glacier after 14 days.",
            "isCorrect": true
          },
          {
            "answerText": "Launch Amazon EC2 instances across two Availability Zones and place them behind an Elastic Load Balancer to ingest the alerts. Create a script on the EC2 instances that will store the alerts in an Amazon S3 bucket. Set up an S3 Lifecycle configuration to transition data to Amazon S3 Glacier after 14 days.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon Kinesis Data Firehose delivery stream to ingest the alerts. Configure the Kinesis Data Firehose stream to deliver the alerts to an Amazon OpenSearch Service (Amazon Elasticsearch Service) cluster. Set up the Amazon OpenSearch Service (Amazon Elasticsearch Service) cluster to take manual snapshots every day and delete data from the cluster that is older than 14 days.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon Simple Queue Service (Amazon SQS) standard queue to ingest the alerts, and set the message retention period to 14 days. Configure consumers to poll the SQS queue, check the age of the message, and analyze the message data as needed. If the message is 14 days old, the consumer should copy the message to an Amazon S3 bucket and delete the message from the SQS queue.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company's application integrates with multiple software-as-a-service (SaaS) sources for data collection. The company runs Amazon EC2 instances to receive the data and to upload the data to an Amazon S3 bucket for analysis. The same EC2 instance that receives and uploads the data also sends a notification to the user when an upload is complete. The company has noticed slow application performance and wants to improve the performance as much as possible. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "Amazon AppFlow is a fully-managed integration service that enables you to securely exchange data between software as a service (SaaS) applications, such as Salesforce, and AWS services, such as Amazon Simple Storage Service (Amazon S3) and Amazon Redshift.\nThe use of Appflow helps to remove the ec2 as the middle layer which slows down the process of data transmission and introduce an additional variable.\nAppflow is also a fully managed AWS service, thus reducing the operational overhead.",
        "answers": [
          {
            "answerText": "Create an Auto Scaling group so that EC2 instances can scale out. Configure an S3 event notification to send events to an Amazon Simple Notification Service (Amazon SNS) topic when the upload to the S3 bucket is complete.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon AppFlow flow to transfer data between each SaaS source and the S3 bucket. Configure an S3 event notification to send events to an Amazon Simple Notification Service (Amazon SNS) topic when the upload to the S3 bucket is complete.",
            "isCorrect": true
          },
          {
            "answerText": "Create an Amazon EventBridge (Amazon CloudWatch Events) rule for each SaaS source to send output data. Configure the S3 bucket as the rule's target. Create a second EventBridge (Cloud Watch Events) rule to send events when the upload to the S3 bucket is complete. Configure an Amazon Simple Notification Service (Amazon SNS) topic as the second rule's target.",
            "isCorrect": false
          },
          {
            "answerText": "Create a Docker container to use instead of an EC2 instance. Host the containerized application on Amazon Elastic Container Service (Amazon ECS). Configure Amazon CloudWatch Container Insights to send events to an Amazon Simple Notification Service (Amazon SNS) topic when the upload to the S3 bucket is complete.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company runs a highly available image-processing application on Amazon EC2 instances in a single VPC. The EC2 instances run inside several subnets across multiple Availability Zones. The EC2 instances do not communicate with each other. However, the EC2 instances download images from Amazon S3 and upload images to Amazon S3 through a single NAT gateway. The company is concerned about data transfer charges. What is the MOST cost-effective way for the company to avoid Regional data transfer charges?",
        "explanation": "S3 VPC endpoint provides a way for an S3 request to be routed through to the Amazon S3 service, without having to connect a subnet to an internet gateway.",
        "answers": [
          {
            "answerText": "Launch the NAT gateway in each Availability Zone.",
            "isCorrect": false
          },
          {
            "answerText": "Replace the NAT gateway with a NAT instance.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy a gateway VPC endpoint for Amazon S3.",
            "isCorrect": true
          },
          {
            "answerText": "Provision an EC2 Dedicated Host to run the EC2 instances.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has an on-premises application that generates a large amount of time-sensitive data that is backed up to Amazon S3. The application has grown and there are user complaints about internet bandwidth limitations. A solutions architect needs to design a long-term solution that allows for both timely backups to Amazon S3 and with minimal impact on internet connectivity for internal users. Which solution meets these requirements?",
        "explanation": "AWS Direct Connect is a network service that allows you to establish a dedicated network connection from your on-premises data center to AWS. This connection bypasses the public Internet and can provide more reliable, lower-latency communication between your on-premises application and Amazon S3. By directing backup traffic through the AWS Direct Connect connection, you can minimize the impact on your internet bandwidth and ensure timely backups to S3.",
        "answers": [
          {
            "answerText": "Establish AWS VPN connections and proxy all traffic through a VPC gateway endpoint.",
            "isCorrect": false
          },
          {
            "answerText": "Establish a new AWS Direct Connect connection and direct backup traffic through this new connection.",
            "isCorrect": true
          },
          {
            "answerText": "Order daily AWS Snowball devices. Load the data onto the Snowball devices and return the devices to AWS each day.",
            "isCorrect": false
          },
          {
            "answerText": "Submit a support ticket through the AWS Management Console. Request the removal of S3 service limits from the account.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has an Amazon S3 bucket that contains critical data. The company must protect the data from accidental deletion. Which combination of steps should a solutions architect take to meet these requirements? (Select TWO.)",
        "explanation": "A. Enable versioning on the S3 bucket.\nB. Enable MFA Delete on the S3 bucket.\n\nVersioning keeps multiple versions of objects in the S3 bucket, even when they are overwritten or deleted. This allows you to recover objects that have been accidentally deleted.\n\nMFA Delete requires you to enter a one-time password from a multi-factor authentication (MFA) device before you can delete an object in the S3 bucket. This helps to prevent accidental deletions.",
        "answers": [
          {
            "answerText": "Enable versioning on the S3 bucket.",
            "isCorrect": true
          },
          {
            "answerText": "Enable MFA Delete on the S3 bucket.",
            "isCorrect": true
          },
          {
            "answerText": "Create a bucket policy on the S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Enable default encryption on the S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Create a lifecycle policy for the objects in the S3 bucket.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has a data ingestion workflow that consists of the following:\nâ€¢ An Amazon Simple Notification Service (Amazon SNS) topic for notifications about new data deliveries\nâ€¢ An AWS Lambda function to process the data and record metadata\nThe company observes that the ingestion workflow fails occasionally because of network connectivity issues. When such a failure occurs, the Lambda function does not ingest the corresponding data unless the company manually reruns the job.\nWhich combination of actions should a solutions architect take to ensure that the Lambda function ingests all data in the future? (Select TWO.)",
        "explanation": "B. Create an Amazon Simple Queue Service (Amazon SQS) queue, and subscribe it to the SNS topic. This will decouple the ingestion workflow and provide a buffer to temporarily store the data in case of network connectivity issues.\n\nE. Modify the Lambda function to read from an Amazon Simple Queue Service (Amazon SQS) queue. This will allow the Lambda function to process the data from the SQS queue at its own pace, decoupling the data ingestion from the data delivery and providing more flexibility and fault tolerance.",
        "answers": [
          {
            "answerText": "Deploy the Lambda function in multiple Availability Zones.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon Simple Queue Service (Amazon SQS) queue, and subscribe it to the SNS topic.",
            "isCorrect": true
          },
          {
            "answerText": "Increase the CPU and memory that are allocated to the Lambda function.",
            "isCorrect": false
          },
          {
            "answerText": "Increase provisioned throughput for the Lambda function.",
            "isCorrect": false
          },
          {
            "answerText": "Modify the Lambda function to read from an Amazon Simple Queue Service (Amazon SQS) queue.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company has an application that provides marketing services to stores. The services are based on previous purchases by store customers. The stores upload transaction data to the company through SFTP, and the data is processed and analyzed to generate new marketing offers. Some of the files can exceed 200 GB in size. Recently, the company discovered that some of the stores have uploaded files that contain personally identifiable information (PII) that should not have been included. The company wants administrators to be alerted if PII is shared again. The company also wants to automate remediation. What should a solutions architect do to meet these requirements with the LEAST development effort?",
        "explanation": "Some quotas can be increased, while others cannot. To request an increase to a quota, use the Service Quotas console. To learn how to request an increase, see Requesting a quota increase in the Service Quotas User Guide. If a quota isn't available on the Service Quotas console, use the service limit increase form on the AWS Support Center Console to request an increase to the quota.",
        "answers": [
          {
            "answerText": "Use an Amazon S3 bucket as a secure transfer point. Use Amazon Inspector to scan the objects in the bucket. If objects contain PII, trigger an S3 Lifecycle policy to remove the objects that contain PII.",
            "isCorrect": false
          },
          {
            "answerText": "Use an Amazon S3 bucket as a secure transfer point. Use Amazon Macie to scan the objects in the bucket. If objects contain PII, use Amazon Simple Notification Service (Amazon SNS) to trigger a notification to the administrators to remove the objects that contain PII.",
            "isCorrect": true
          },
          {
            "answerText": "Implement custom scanning algorithms in an AWS Lambda function. Trigger the function when objects are loaded into the bucket. If objects contain PII, use Amazon Simple Notification Service (Amazon SNS) to trigger a notification to the administrators to remove the objects that contain PII.",
            "isCorrect": false
          },
          {
            "answerText": "Implement custom scanning algorithms in an AWS Lambda function. Trigger the function when objects are loaded into the bucket. If objects contain PII, use Amazon Simple Email Service (Amazon SES) to trigger a notification to the administrators and trigger an S3 Lifecycle policy to remove the meats that contain PII.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company needs guaranteed Amazon EC2 capacity in three specific Availability Zones in a specific AWS Region for an upcoming event that will last 1 week. What should the company do to guarantee the EC2 capacity?",
        "explanation": "An On-Demand Capacity Reservation is a type of Amazon EC2 reservation that enables you to create and manage reserved capacity on Amazon EC2. With an On-Demand Capacity Reservation, you can specify the Region and Availability Zones where you want to reserve capacity, and the number of EC2 instances you want to reserve. This allows you to guarantee capacity in specific Availability Zones in a specific Region.",
        "answers": [
          {
            "answerText": "Purchase Reserved Instances that specify the Region needed.",
            "isCorrect": false
          },
          {
            "answerText": "Create an On-Demand Capacity Reservation that specifies the Region needed.",
            "isCorrect": false
          },
          {
            "answerText": "Purchase Reserved Instances that specify the Region and three Availability Zones needed.",
            "isCorrect": false
          },
          {
            "answerText": "Create an On-Demand Capacity Reservation that specifies the Region and three Availability Zones needed.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company's website uses an Amazon EC2 instance store for its catalog of items. The company wants to make sure that the catalog is highly available and that the catalog is stored in a durable location. What should a solutions architect do to meet these requirements?",
        "explanation": "Redis can manage its durability using its AOF persistence which allows logging changes of the catalog data and can be replayed, even in the event of failure. As for the availability, Redis also allows replication, so if one fails, another is still working. Considering this question isn't about sharing file systems between instances and rather a customer wants to access a catalog, option A seems to be more suitable option here.",
        "answers": [
          {
            "answerText": "Move the catalog to Amazon ElastiCache for Redis.",
            "isCorrect": true
          },
          {
            "answerText": "Deploy a larger EC2 instance with a larger instance store.",
            "isCorrect": false
          },
          {
            "answerText": "Move the catalog from the instance store to Amazon S3 Glacier Deep Archive.",
            "isCorrect": false
          },
          {
            "answerText": "Move the catalog to an Amazon Elastic File System (Amazon EFS) file system.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company stores call transcript files on a monthly basis. Users access the files randomly within 1 year of the call, but users access the files infrequently after 1 year. The company wants to optimize its solution by giving users the ability to query and retrieve files that are less than 1-year-old as quickly as possible. A delay in retrieving older files is acceptable. Which solution will meet these requirements MOST cost-effectively?",
        "explanation": "S3 Intelligent-Tiering is the ideal storage class for data with unknown, changing, or unpredictable access patterns, independent of object size or retention period. You can use S3 Intelligent-Tiering as the default storage class for virtually any workload, especially data lakes, data analytics, new applications, and user-generated content.",
        "answers": [
          {
            "answerText": "Store individual files with tags in Amazon S3 Glacier Instant Retrieval. Query the tags to retrieve the files from S3 Glacier Instant Retrieval.",
            "isCorrect": false
          },
          {
            "answerText": "Store individual files in Amazon S3 Intelligent-Tiering. Use S3 Lifecycle policies to move the files to S3 Glacier Flexible Retrieval after 1 year. Query and retrieve the files that are in Amazon S3 by using Amazon Athena. Query and retrieve the files that are in S3 Glacier by using S3 Glacier Select.",
            "isCorrect": true
          },
          {
            "answerText": "Store individual files with tags in Amazon S3 Standard storage. Store search metadata for each archive in Amazon S3 Standard storage. Use S3 Lifecycle policies to move the files to S3 Glacier Instant Retrieval after 1 year. Query and retrieve the files by searching for metadata from Amazon S3.",
            "isCorrect": false
          },
          {
            "answerText": "Store individual files in Amazon S3 Standard storage. Use S3 Lifecycle policies to move the files to S3 Glacier Deep Archive after 1 year. Store search metadata in Amazon RDS. Query the files from Amazon RDS. Retrieve the files from S3 Glacier Deep Archive.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has a production workload that runs on 1,000 Amazon EC2 Linux instances. The workload is powered by third-party software. The company needs to patch the third-party software on all EC2 instances as quickly as possible to remediate a critical security vulnerability. What should a solutions architect do to meet these requirements?",
        "explanation": "AWS Systems Manager Run Command allows the company to run commands or scripts on multiple EC2 instances. By using Run Command, the company can quickly and easily apply the patch to all 1,000 EC2 instances to remediate the security vulnerability.\n\nCreating an AWS Lambda function to apply the patch to all EC2 instances would not be a suitable solution, as Lambda functions are not designed to run on EC2 instances. Configuring AWS Systems Manager Patch Manager to apply the patch to all EC2 instances would not be a suitable solution, as Patch Manager is not designed to apply third-party software patches. Scheduling an AWS Systems Manager maintenance window to apply the patch to all EC2 instances would not be a suitable solution, as maintenance windows are not designed to apply patches to third-party software.",
        "answers": [
          {
            "answerText": "Create an AWS Lambda function to apply the patch to all EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Configure AWS Systems Manager Patch Manager to apply the patch to all EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Schedule an AWS Systems Manager maintenance window to apply the patch to all EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Systems Manager Run Command to run a custom command that applies the patch to all EC2 instances.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company is developing an application that provides order shipping statistics for retrieval by a REST API. The company wants to extract the shipping statistics, organize the data into an easy-to-read HTML format, and send the report to several email addresses at the same time every morning. Which combination of steps should a solutions architect take to meet these requirements? (Select TWO.)",
        "explanation": "This combination is chosen because Amazon EventBridge (D) provides scheduled invocation for an AWS Lambda function to query the API and format data into HTML, while the subsequent storing of this report in Amazon S3 triggers an Amazon SNS topic (E) to distribute it to multiple email addresses.",
        "answers": [
          {
            "answerText": "Configure the application to send the data to Amazon Kinesis Data Firehose.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Simple Email Service (Amazon SES) to format the data and to send the report by email.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Glue job to query the application's API for the data.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Lambda function to query the application's API for the data.",
            "isCorrect": true
          },
          {
            "answerText": "Store the application data in Amazon S3. Create an Amazon Simple Notification Service (Amazon SNS) topic as an S3 event destination to send the report by email.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company wants to migrate its on-premises application to AWS. The application produces output files that vary in size from tens of gigabytes to hundreds of terabytes. The application data must be stored in a standard file system structure. The company wants a solution that scales automatically. is highly available, and requires minimum operational overhead. Which solution will meet these requirements?",
        "explanation": "This solution is chosen because migrating the application to Amazon EC2 instances in a Multi-AZ Auto Scaling group ensures scalable and highly available compute, while Amazon EFS provides a standard, automatically scaling, and highly available file system capable of handling large, varying file sizes with minimal operational overhead.",
        "answers": [
          {
            "answerText": "Migrate the application to run as containers on Amazon Elastic Container Service (Amazon ECS). Use Amazon S3 for storage.",
            "isCorrect": false
          },
          {
            "answerText": "Migrate the application to run as containers on Amazon Elastic Kubernetes Service (Amazon EKS). Use Amazon Elastic Block Store (Amazon EBS) for storage.",
            "isCorrect": false
          },
          {
            "answerText": "Migrate the application to Amazon EC2 instances in a Multi-AZ Auto Scaling group. Use Amazon Elastic File System (Amazon EFS) for storage.",
            "isCorrect": true
          },
          {
            "answerText": "Migrate the application to Amazon EC2 instances in a Multi-AZ Auto Scaling group. Use Amazon Elastic Block Store (Amazon EBS) for storage.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company needs to store its accounting records in Amazon S3. The records must be immediately accessible for 1 year and then must be archived for an additional 9 years. No one at the company, including administrative users and root users, can be able to delete the records during the entire 10-year period. The records must be stored with maximum resiliency. Which solution will meet these requirements?",
        "explanation": "This solution fulfills all requirements by initially storing records in S3 Standard for immediate resilient access, then using an S3 Lifecycle policy to transition them to S3 Glacier Deep Archive for cost-effective long-term archival, while S3 Object Lock in compliance mode ensures they remain undeletable by anyone for the entire ten-year period.",
        "answers": [
          {
            "answerText": "Store the records in S3 Glacier for the entire 10-year period. Use an access control policy to deny deletion of the records for a period of 10 years.",
            "isCorrect": false
          },
          {
            "answerText": "Store the records by using S3 Intelligent-Tiering. Use an IAM policy to deny deletion of the records. After 10 years, change the IAM policy to allow deletion.",
            "isCorrect": false
          },
          {
            "answerText": "Use an S3 Lifecycle policy to transition the records from S3 Standard to S3 Glacier Deep Archive after 1 year. Use S3 Object Lock in compliance mode for a period of 10 years.",
            "isCorrect": true
          },
          {
            "answerText": "Use an S3 Lifecycle policy to transition the records from S3 Standard to S3 One Zone-Infrequent Access (S3 One Zone-IA) after 1 year. Use S3 Object Lock in governance mode for a period of 10 years.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company runs multiple Windows workloads on AWS. The company's employees use Windows file shares that are hosted on two Amazon EC2 instances. The file shares synchronize data between themselves and maintain duplicate copies. The company wants a highly available and durable storage solution that preserves how users currently access the files. What should a solutions architect do to meet these requirements?",
        "explanation": "This solution meets the requirements by using Amazon FSx for Windows File Server in a Multi-AZ configuration because it provides a native Windows file system that's highly available and durable, and it preserves the existing Windows file share access method for users.",
        "answers": [
          {
            "answerText": "Migrate all the data to Amazon S3. Set up IAM authentication for users to access files.",
            "isCorrect": false
          },
          {
            "answerText": "Set up an Amazon S3 File Gateway. Mount the S3 File Gateway on the existing EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Extend the file share environment to Amazon FSx for Windows File Server with a Multi-AZ configuration. Migrate all the data to FSx for Windows File Server.",
            "isCorrect": true
          },
          {
            "answerText": "Extend the file share environment to Amazon Elastic File System (Amazon EFS) with a Multi-AZ configuration. Migrate all the data to Amazon EFS.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A solutions architect is developing a VPC architecture that includes multiple subnets. The architecture will host applications that use Amazon EC2 instances and Amazon RDS DB instances. The architecture consists of six subnets in two Availability Zones. Each Availability Zone includes a public subnet, a private subnet, and a dedicated subnet for databases. Only EC2 instances that run in the private subnets can have access to the RDS databases. Which solution will meet these requirements?",
        "explanation": "This solution meets the requirements by creating a security group for the RDS DB instances that specifically allows inbound traffic only from the security group assigned to the EC2 instances in the private subnets, thereby restricting database access appropriately.",
        "answers": [
          {
            "answerText": "Create a new route table that excludes the route to the public subnets' CIDR blocks. Associate the route table with the database subnets.",
            "isCorrect": false
          },
          {
            "answerText": "Create a security group that denies inbound traffic from the security group that is assigned to instances in the public subnets. Attach the security group to the DB instances.",
            "isCorrect": false
          },
          {
            "answerText": "Create a security group that allows inbound traffic from the security group that is assigned to instances in the private subnets. Attach the security group to the DB instances.",
            "isCorrect": true
          },
          {
            "answerText": "Create a new peering connection between the public subnets and the private subnets. Create a different peering connection between the private subnets and the database subnets.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has registered its domain name with Amazon Route 53. The company uses Amazon API Gateway in the ca-central-1 Region as a public interface for its backend microservice APIs. Third-party services consume the APIs securely. The company wants to design its API Gateway URL with the company's domain name and corresponding certificate so that the third-party services can use HTTPS. Which solution will meet these requirements?",
        "explanation": "This solution meets the requirements by creating a Regional API Gateway endpoint, associating it with the company's custom domain name, importing the necessary public certificate into AWS Certificate Manager (ACM) in the us-east-1 Region (which is required for Regional API Gateway custom domains), and then creating Amazon Route 53 A records to point the company's domain to the API Gateway.",
        "answers": [
          {
            "answerText": "Create stage variables in API Gateway with Name=\"Endpoint-URL\" and Value=\"Company Domain Name\" to overwrite the default URL. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM).",
            "isCorrect": false
          },
          {
            "answerText": "Create Route 53 DNS records with the company's domain name. Point the alias record to the Regional API Gateway stage endpoint. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region.",
            "isCorrect": false
          },
          {
            "answerText": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the same Region. Attach the certificate to the API Gateway endpoint. Configure Route 53 to route traffic to the API Gateway endpoint.",
            "isCorrect": false
          },
          {
            "answerText": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region. Attach the certificate to the API Gateway APIs. Create Route 53 DNS records with the company's domain name. Point an A record to the company's domain name.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company is running a popular social media website. The website gives users the ability to upload images to share with other users. The company wants to make sure that the images do not contain inappropriate content. The company needs a solution that minimizes development effort. What should a solutions architect do to meet these requirements?",
        "explanation": "This solution meets the requirements by using Amazon Rekognition to automatically detect inappropriate image content with minimal development effort, and incorporating human review for low-confidence predictions to ensure accuracy.",
        "answers": [
          {
            "answerText": "Use Amazon Comprehend to detect inappropriate content. Use human review for low-confidence predictions.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Rekognition to detect inappropriate content. Use human review for low-confidence predictions.",
            "isCorrect": true
          },
          {
            "answerText": "Use Amazon SageMaker to detect inappropriate content. Use ground truth to label low-confidence predictions.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Fargate to deploy a custom machine learning model to detect inappropriate content. Use ground truth to label low-confidence predictions.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company wants to run its critical applications in containers to meet requirements for scalability and availability. The company prefers to focus on maintenance of the critical applications. The company does not want to be responsible for provisioning and managing the underlying infrastructure that runs the containerized workload. What should a solutions architect do to meet these requirements?",
        "explanation": "This solution meets the requirements because Amazon Elastic Container Service (Amazon ECS) on AWS Fargate allows the company to run containerized applications without managing the underlying server infrastructure, enabling a focus on application maintenance while ensuring scalability and availability.",
        "answers": [
          {
            "answerText": "Use Amazon EC2 instances, and install Docker on the instances.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Elastic Container Service (Amazon ECS) on Amazon EC2 worker nodes.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Elastic Container Service (Amazon ECS) on AWS Fargate.",
            "isCorrect": true
          },
          {
            "answerText": "Use Amazon EC2 instances from an Amazon Elastic Container Service (Amazon ECS)-optimized Amazon Machine Image (AMI).",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company hosts more than 300 global websites and applications. The company requires a platform to analyze more than 30 TB of clickstream data each day. What should a solutions architect do to transmit and process the clickstream data?",
        "explanation": "This solution effectively handles the large volume of clickstream data by using Amazon Kinesis Data Streams for real-time data collection, Amazon Kinesis Data Firehose to reliably load this data into an Amazon S3 data lake, and then Amazon Redshift for powerful analysis of the aggregated data.",
        "answers": [
          {
            "answerText": "Design an AWS Data Pipeline to archive the data to an Amazon S3 bucket and run an Amazon EMR cluster with the data to generate analytics.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Auto Scaling group of Amazon EC2 instances to process the data and send it to an Amazon S3 data lake for Amazon Redshift to use for analysis.",
            "isCorrect": false
          },
          {
            "answerText": "Cache the data to Amazon CloudFront. Store the data in an Amazon S3 bucket. When an object is added to the S3 bucket. run an AWS Lambda function to process the data for analysis.",
            "isCorrect": false
          },
          {
            "answerText": "Collect the data from Amazon Kinesis Data Streams. Use Amazon Kinesis Data Firehose to transmit the data to an Amazon S3 data lake. Load the data in Amazon Redshift for analysis.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company has a website hosted on AWS. The website is behind an Application Load Balancer (ALB) that is configured to handle HTTP and HTTPS separately. The company wants to forward all requests to the website so that the requests will use HTTPS. What should a solutions architect do to meet this requirement?",
        "explanation": "This solution meets the requirement by configuring a listener rule on the Application Load Balancer (ALB) to automatically redirect all incoming HTTP traffic to HTTPS, ensuring users are seamlessly forwarded to the secure version of the website.",
        "answers": [
          {
            "answerText": "Update the ALB's network ACL to accept only HTTPS traffic.",
            "isCorrect": false
          },
          {
            "answerText": "Create a rule that replaces the HTTP in the URL with HTTPS.",
            "isCorrect": false
          },
          {
            "answerText": "Create a listener rule on the ALB to redirect HTTP traffic to HTTPS.",
            "isCorrect": true
          },
          {
            "answerText": "Replace the ALB with a Network Load Balancer configured to use Server Name Indication (SNI).",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is developing a two-tier web application on AWS. The company's developers have deployed the application on an Amazon EC2 instance that connects directly to a backend Amazon RDS database. The company must not hardcode database credentials in the application. The company must also implement a solution to automatically rotate the database credentials on a regular basis. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "This solution meets the requirements with the least operational overhead by using AWS Secrets Manager to store and automatically rotate the database credentials, while granting the EC2 instance access via an IAM role, thus avoiding hardcoded credentials.",
        "answers": [
          {
            "answerText": "Store the database credentials in the instance metadata. Use Amazon EventBridge (Amazon CloudWatch Events) rules to run a scheduled AWS Lambda function that updates the RDS credentials and instance metadata at the same time.",
            "isCorrect": false
          },
          {
            "answerText": "Store the database credentials in a configuration file in an encrypted Amazon S3 bucket. Use Amazon EventBridge (Amazon CloudWatch Events) rules to run a scheduled AWS Lambda function that updates the RDS credentials and the credentials in the configuration file at the same time. Use S3 Versioning to ensure the ability to fall back to previous values.",
            "isCorrect": false
          },
          {
            "answerText": "Store the database credentials as a secret in AWS Secrets Manager. Turn on automatic rotation for the secret. Attach the required permission to the EC2 role to grant access to the secret.",
            "isCorrect": true
          },
          {
            "answerText": "Store the database credentials as encrypted parameters in AWS Systems Manager Parameter Store. Turn on automatic rotation for the encrypted parameters. Attach the required permission to the EC2 role to grant access to the encrypted parameters.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is deploying a new public web application to AWS. The application will run behind an Application Load Balancer (ALB). The application needs to be encrypted at the edge with an SSL/TLS certificate that is issued by an external certificate authority (CA). The certificate must be rotated each year before the certificate expires. What should a solutions architect do to meet these requirements?",
        "explanation": "This solution meets the requirements by using AWS Certificate Manager (ACM) to import the external SSL/TLS certificate, applying it to the Application Load Balancer (ALB), and then leveraging Amazon EventBridge to send rotation notifications, allowing for manual rotation of the imported certificate.",
        "answers": [
          {
            "answerText": "Use AWS Certificate Manager (ACM) to issue an SSL/TLS certificate. Apply the certificate to the ALB. Use the managed renewal feature to automatically rotate the certificate.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Certificate Manager (ACM) to issue an SSL/TLS certificate. Import the key material from the certificate. Apply the certificate to the ALUse the managed renewal feature to automatically rotate the certificate.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Certificate Manager (ACM) Private Certificate Authority to issue an SSL/TLS certificate from the root CA. Apply the certificate to the ALB. Use the managed renewal feature to automatically rotate the certificate.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Certificate Manager (ACM) to import an SSL/TLS certificate. Apply the certificate to the ALB. Use Amazon EventBridge (Amazon CloudWatch Events) to send a notification when the certificate is nearing expiration. Rotate the certificate manually.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company runs its infrastructure on AWS and has a registered base of 700,000 users for its document management application. The company intends to create a product that converts large .pdf files to .jpg image files. The .pdf files average 5 MB in size. The company needs to store the original files and the converted files. A solutions architect must design a scalable solution to accommodate demand that will grow rapidly over time. Which solution meets these requirements MOST cost-effectively?",
        "explanation": "This solution is the most cost-effective and scalable because it uses Amazon S3 for durable and inexpensive storage of both original and converted files, and an S3 PUT event to trigger a serverless AWS Lambda function for on-demand conversion, automatically scaling with demand.",
        "answers": [
          {
            "answerText": "Save the .pdf files to Amazon S3. Configure an S3 PUT event to invoke an AWS Lambda function to convert the files to .jpg format and store them back in Amazon S3.",
            "isCorrect": true
          },
          {
            "answerText": "Save the .pdf files to Amazon DynamoDUse the DynamoDB Streams feature to invoke an AWS Lambda function to convert the files to .jpg format and store them back in DynamoDB.",
            "isCorrect": false
          },
          {
            "answerText": "Upload the .pdf files to an AWS Elastic Beanstalk application that includes Amazon EC2 instances, Amazon Elastic Block Store (Amazon EBS) storage, and an Auto Scaling group. Use a program in the EC2 instances to convert the files to .jpg format. Save the .pdf files and the .jpg files in the EBS store.",
            "isCorrect": false
          },
          {
            "answerText": "Upload the .pdf files to an AWS Elastic Beanstalk application that includes Amazon EC2 instances, Amazon Elastic File System (Amazon EFS) storage, and an Auto Scaling group. Use a program in the EC2 instances to convert the file to .jpg format. Save the .pdf files and the .jpg files in the EBS store.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has more than 5 TB of file data on Windows file servers that run on premises. Users and applications interact with the data each day. The company is moving its Windows workloads to AWS. As the company continues this process, the company requires access to AWS and on-premises file storage with minimum latency. The company needs a solution that minimizes operational overhead and requires no significant changes to the existing file access patterns. The company uses an AWS Site-to-Site VPN connection for connectivity to AWS. What should a solutions architect do to meet these requirements?",
        "explanation": "This solution meets the requirements by deploying Amazon FSx for Windows File Server on AWS for cloud workloads and an Amazon FSx File Gateway on-premises for local low-latency access, ensuring minimal changes to existing Windows file access patterns and reducing operational overhead.",
        "answers": [
          {
            "answerText": "Deploy and configure Amazon FSx for Windows File Server on AWS. Move the on-premises file data to FSx for Windows File Server. Reconfigure the workloads to use FSx for Windows File Server on AWS.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy and configure an Amazon S3 File Gateway on premises. Move the on-premises file data to the S3 File Gateway. Reconfigure the on premises workloads and the cloud workloads to use the S3 File Gateway.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy and configure an Amazon S3 File Gateway on premises. Move the on-premises file data to Amazon S3. Reconfigure the workloads to use either Amazon S3 directly or the S3 File Gateway. depending on each workload's location.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy and configure Amazon FSx for Windows File Server on AWS. Deploy and configure an Amazon FSx File Gateway on premises. Move the on-premises file data to the FSx File Gateway. Configure the cloud workloads to use FSx for Windows File Server on AWS. Configure the on-premises workloads to use the FSx File Gateway.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A hospital recently deployed a RESTful API with Amazon API Gateway and AWS Lambda. The hospital uses API Gateway and Lambda to upload reports that are in PDF format and JPEG format. The hospital needs to modify the Lambda code to identify protected health information (PHI) in the reports. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "This solution meets the requirements with the least operational overhead by using Amazon Textract to extract text from PDF and JPEG reports and then leveraging Amazon Comprehend Medical to identify protected health information (PHI) from the extracted text, both of which are managed services.",
        "answers": [
          {
            "answerText": "Use existing Python libraries to extract the text from the reports and to identify the PHI from the extracted text.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Textract to extract the text from the reports. Use Amazon SageMaker to identify the PHI from the extracted text.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Textract to extract the text from the reports. Use Amazon Comprehend Medical to identify the PHI from the extracted text.",
            "isCorrect": true
          },
          {
            "answerText": "Use Amazon Rekognition to extract the text from the reports. Use Amazon Comprehend Medical to identify the PHI from the extracted text.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has an application that generates a large number of files, each approximately 5 MB in size. The files are stored in Amazon S3. Company policy requires the files to be stored for 4 years before they can be deleted. Immediate accessibility is always required as the files contain critical business data that is not easy to reproduce. The files are frequently accessed in the first 30 days of the object creation but are rarely accessed after the first 30 days. Which storage solution is MOST cost-effective?",
        "explanation": "This solution is the most cost-effective by using an S3 Lifecycle policy to transition files from S3 Standard (for frequent access in the first 30 days) to S3 Standard-Infrequent Access (S3 Standard-IA) for continued immediate accessibility at a lower storage cost after 30 days, and then deleting them after 4 years as required.",
        "answers": [
          {
            "answerText": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 Glacier 30 days from object creation. Delete the files 4 years after object creation.",
            "isCorrect": false
          },
          {
            "answerText": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 One Zone-Infrequent Access (S3 One Zone-IA) 30 days from object creation. Delete the files 4 years after object creation.",
            "isCorrect": false
          },
          {
            "answerText": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 Standard-Infrequent Access (S3 Standard-IA) 30 days from object creation. Delete the files 4 years after object creation.",
            "isCorrect": true
          },
          {
            "answerText": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 Standard-Infrequent Access (S3 Standard-IA) 30 days from object creation. Move the files to S3 Glacier 4 years after object creation.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company hosts an application on multiple Amazon EC2 instances. The application processes messages from an Amazon SQS queue, writes to an Amazon RDS table, and deletes the message from the queue. Occasional duplicate records are found in the RDS table. The SQS queue does not contain any duplicate messages. What should a solutions architect do to ensure messages are being processed once only?",
        "explanation": "To ensure messages are processed only once and prevent duplicate records, the solutions architect should increase the SQS queue's visibility timeout using the ChangeMessageVisibility API call, giving the application enough time to process and delete a message before it becomes visible again for another instance to process.",
        "answers": [
          {
            "answerText": "Use the CreateQueue API call to create a new queue.",
            "isCorrect": false
          },
          {
            "answerText": "Use the AddPermission API call to add appropriate permissions.",
            "isCorrect": false
          },
          {
            "answerText": "Use the ReceiveMessage API call to set an appropriate wait time.",
            "isCorrect": false
          },
          {
            "answerText": "Use the ChangeMessageVisibility API call to increase the visibility timeout.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A solutions architect is designing a new hybrid architecture to extend a company's on-premises infrastructure to AWS. The company requires a highly available connection with consistent low latency to an AWS Region. The company needs to minimize costs and is willing to accept slower traffic if the primary connection fails. What should the solutions architect do to meet these requirements?",
        "explanation": "This solution meets the requirements by provisioning an AWS Direct Connect connection for highly available, low-latency primary connectivity and a cost-effective VPN connection as a backup in case the Direct Connect connection fails.",
        "answers": [
          {
            "answerText": "Provision an AWS Direct Connect connection to a Region. Provision a VPN connection as a backup if the primary Direct Connect connection fails.",
            "isCorrect": true
          },
          {
            "answerText": "Provision a VPN tunnel connection to a Region for private connectivity. Provision a second VPN tunnel for private connectivity and as a backup if the primary VPN connection fails.",
            "isCorrect": false
          },
          {
            "answerText": "Provision an AWS Direct Connect connection to a Region. Provision a second Direct Connect connection to the same Region as a backup if the primary Direct Connect connection fails.",
            "isCorrect": false
          },
          {
            "answerText": "Provision an AWS Direct Connect connection to a Region. Use the Direct Connect failover attribute from the AWS CLI to automatically create a backup connection if the primary Direct Connect connection fails.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is running a business-critical web application on Amazon EC2 instances behind an Application Load Balancer. The EC2 instances are in an Auto Scaling group. The application uses an Amazon Aurora PostgreSQL database that is deployed in a single Availability Zone. The company wants the application to be highly available with minimum downtime and minimum loss of data. Which solution will meet these requirements with the LEAST operational effort?",
        "explanation": "This solution provides high availability with minimal operational effort by configuring the Auto Scaling group to use multiple Availability Zones, making the Amazon Aurora PostgreSQL database Multi-AZ for automatic failover, and using an Amazon RDS Proxy instance to improve connection management and resilience.",
        "answers": [
          {
            "answerText": "Place the EC2 instances in different AWS Regions. Use Amazon Route 53 health checks to redirect traffic. Use Aurora PostgreSQL Cross-Region Replication.",
            "isCorrect": false
          },
          {
            "answerText": "Configure the Auto Scaling group to use multiple Availability Zones. Configure the database as Multi-AZ. Configure an Amazon RDS Proxy instance for the database.",
            "isCorrect": true
          },
          {
            "answerText": "Configure the Auto Scaling group to use one Availability Zone. Generate hourly snapshots of the database. Recover the database from the snapshots in the event of a failure.",
            "isCorrect": false
          },
          {
            "answerText": "Configure the Auto Scaling group to use multiple AWS Regions. Write the data from the application to Amazon S3. Use S3 Event Notifications to launch an AWS Lambda function to write the data to the database.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company's HTTP application is behind a Network Load Balancer (NLB). The NLB's target group is configured to use an Amazon EC2 Auto Scaling group with multiple EC2 instances that run the web service. The company notices that the NLB is not detecting HTTP errors for the application. These errors require a manual restart of the EC2 instances that run the web service. The company needs to improve the application's availability without writing custom scripts or code. What should a solutions architect do to meet these requirements?",
        "explanation": "To improve availability without custom code, the company should replace the Network Load Balancer with an Application Load Balancer, enable HTTP health checks using the application's URL, and configure an Auto Scaling action to replace unhealthy instances.",
        "answers": [
          {
            "answerText": "Enable HTTP health checks on the NLB, supplying the URL of the company's application.",
            "isCorrect": false
          },
          {
            "answerText": "Add a cron job to the EC2 instances to check the local application's logs once each minute. If HTTP errors are detected. the application will restart.",
            "isCorrect": false
          },
          {
            "answerText": "Replace the NLB with an Application Load Balancer. Enable HTTP health checks by supplying the URL of the company's application. Configure an Auto Scaling action to replace unhealthy instances.",
            "isCorrect": true
          },
          {
            "answerText": "Create an Amazon Cloud Watch alarm that monitors the UnhealthyHostCount metric for the NLB. Configure an Auto Scaling action to replace unhealthy instances when the alarm is in the ALARM state.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company runs a shopping application that uses Amazon DynamoDB to store customer information. In case of data corruption, a solutions architect needs to design a solution that meets a recovery point objective (RPO) of 15 minutes and a recovery time objective (RTO) of 1 hour. What should the solutions architect recommend to meet these requirements?",
        "explanation": "To meet the recovery objectives, the solutions architect should configure DynamoDB point-in-time recovery (PITR), which allows restoring the table to any specific second in the preceding 35 days, thereby supporting the 15-minute RPO and 1-hour RTO.",
        "answers": [
          {
            "answerText": "Configure DynamoDB global tables. For RPO recovery, point the application to a different AWS Region.",
            "isCorrect": false
          },
          {
            "answerText": "Configure DynamoDB point-in-time recovery. For RPO recovery, restore to the desired point in time.",
            "isCorrect": true
          },
          {
            "answerText": "Export the DynamoDB data to Amazon S3 Glacier on a daily basis. For RPO recovery, import the data from S3 Glacier to DynamoDB.",
            "isCorrect": false
          },
          {
            "answerText": "Schedule Amazon Elastic Block Store (Amazon EBS) snapshots for the DynamoDB table every 15 minutes. For RPO recovery, restore the DynamoDB table by using the EBS snapshot.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company runs a photo processing application that needs to frequently upload and download pictures from Amazon S3 buckets that are located in the same AWS Region. A solutions architect has noticed an increased cost in data transfer fees and needs to implement a solution to reduce these costs. How can the solutions architect meet this requirement?",
        "explanation": "To reduce data transfer fees for S3 access within the same region, the solutions architect should deploy an S3 VPC gateway endpoint into the VPC and attach an appropriate endpoint policy, as this routes traffic between the VPC and S3 over the AWS network, avoiding public internet data transfer charges.",
        "answers": [
          {
            "answerText": "Deploy Amazon API Gateway into a public subnet and adjust the route table to route S3 calls through it.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy a NAT gateway into a public subnet and attach an endpoint policy that allows access to the S3 buckets.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy the application into a public subnet and allow it to route through an internet gateway to access the S3 buckets.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy an S3 VPC gateway endpoint into the VPC and attach an endpoint policy that allows access to the S3 buckets.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company recently launched Linux-based application instances on Amazon EC2 in a private subnet and launched a Linux-based bastion host on an Amazon EC2 instance in a public subnet of a VPC. A solutions architect needs to connect from the on-premises network, through the company's internet connection, to the bastion host, and to the application servers. The solutions architect must make sure that the security groups of all the EC2 instances will allow that access. Which combination of steps should the solutions architect take to meet these requirements? (Select TWO.)",
        "explanation": "This two-step solution correctly configures security groups by first allowing inbound SSH access to the bastion host only from the company's external IP range and then allowing inbound SSH access to the application instances only from the private IP address of that bastion host.",
        "answers": [
          {
            "answerText": "Replace the current security group of the bastion host with one that only allows inbound access from the application instances.",
            "isCorrect": false
          },
          {
            "answerText": "Replace the current security group of the bastion host with one that only allows inbound access from the internal IP range for the company.",
            "isCorrect": false
          },
          {
            "answerText": "Replace the current security group of the bastion host with one that only allows inbound access from the external IP range for the company.",
            "isCorrect": true
          },
          {
            "answerText": "Replace the current security group of the application instances with one that allows inbound SSH access from only the private IP address of the bastion host.",
            "isCorrect": true
          },
          {
            "answerText": "Replace the current security group of the application instances with one that allows inbound SSH access from only the public IP address of the bastion host.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A solutions architect is designing a two-tier web application. The application consists of a public-facing web tier hosted on Amazon EC2 in public subnets. The database tier consists of Microsoft SQL Server running on Amazon EC2 in a private subnet. Security is a high priority for the company. How should security groups be configured in this situation? (Select TWO.)",
        "explanation": "This two-part security group configuration correctly allows public HTTPS traffic to the web tier from any IP address and restricts database tier access on the SQL Server port to only originate from the web tier's security group.",
        "answers": [
          {
            "answerText": "Configure the security group for the web tier to allow inbound traffic on port 443 from 0.0.0.0/0.",
            "isCorrect": true
          },
          {
            "answerText": "Configure the security group for the web tier to allow outbound traffic on port 443 from 0.0.0.0/0.",
            "isCorrect": false
          },
          {
            "answerText": "Configure the security group for the database tier to allow inbound traffic on port 1433 from the security group for the web tier.",
            "isCorrect": true
          },
          {
            "answerText": "Configure the security group for the database tier to allow outbound traffic on ports 443 and 1433 to the security group for the web tier.",
            "isCorrect": false
          },
          {
            "answerText": "Configure the security group for the database tier to allow inbound traffic on ports 443 and 1433 from the security group for the web tier.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company wants to move a multi-tiered application from on premises to the AWS Cloud to improve the application's performance. The application consists of application tiers that communicate with each other by way of RESTful services. Transactions are dropped when one tier becomes overloaded. A solutions architect must design a solution that resolves these issues and modernizes the application. Which solution meets these requirements and is the MOST operationally efficient?",
        "explanation": "This solution is the most operationally efficient for modernizing the application and resolving dropped transactions by using Amazon API Gateway with AWS Lambda for the application layer and Amazon Simple Queue Service (Amazon SQS) to reliably decouple and manage communication between services, preventing overload.",
        "answers": [
          {
            "answerText": "Use Amazon API Gateway and direct transactions to the AWS Lambda functions as the application layer. Use Amazon Simple Queue Service (Amazon SQS) as the communication layer between application services.",
            "isCorrect": true
          },
          {
            "answerText": "Use Amazon CloudWatch metrics to analyze the application performance history to determine the servers' peak utilization during the performance failures. Increase the size of the application server's Amazon EC2 instances to meet the peak requirements.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Simple Notification Service (Amazon SNS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SNS queue length and scale up and down as required.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Simple Queue Service (Amazon SQS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SQS queue length and scale up when communication failures are detected.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company receives 10 TB of instrumentation data each day from several machines located at a single factory. The data consists of JSON files stored on a storage area network (SAN) in an on-premises data center located within the factory. The company wants to send this data to Amazon S3 where it can be accessed by several additional systems that provide critical near-real-time analytics. A secure transfer is important because the data is considered sensitive. Which solution offers the MOST reliable data transfer?",
        "explanation": "Using AWS DataSync over AWS Direct Connect offers the most reliable and secure data transfer for the 10 TB of daily sensitive JSON files by providing a dedicated, high-bandwidth network connection and a managed data transfer service.",
        "answers": [
          {
            "answerText": "AWS DataSync over public internet",
            "isCorrect": false
          },
          {
            "answerText": "AWS DataSync over AWS Direct Connect",
            "isCorrect": true
          },
          {
            "answerText": "AWS Database Migration Service (AWS DMS) over public internet",
            "isCorrect": false
          },
          {
            "answerText": "AWS Database Migration Service (AWS DMS) over AWS Direct Connect",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company needs to configure a real-time data ingestion architecture for its application. The company needs an API, a process that transforms data as the data is streamed, and a storage solution for the data. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "This solution meets the requirements with the least operational overhead by using Amazon API Gateway for the API, Amazon Kinesis Data Streams for data ingestion, AWS Lambda for data transformation integrated with Amazon Kinesis Data Firehose, and Kinesis Data Firehose to deliver the transformed data to Amazon S3 for storage, all of which are managed services",
        "answers": [
          {
            "answerText": "Deploy an Amazon EC2 instance to host an API that sends data to an Amazon Kinesis data stream. Create an Amazon Kinesis Data Firehose delivery stream that uses the Kinesis data stream as a data source. Use AWS Lambda functions to transform the data. Use the Kinesis Data Firehose delivery stream to send the data to Amazon S3.",
            "isCorrect": false
          },
          {
            "answerText": "Deploy an Amazon EC2 instance to host an API that sends data to AWS Glue. Stop source/destination checking on the EC2 instance. Use AWS Glue to transform the data and to send the data to Amazon S3.",
            "isCorrect": false
          },
          {
            "answerText": "Configure an Amazon API Gateway API to send data to an Amazon Kinesis data stream. Create an Amazon Kinesis Data Firehose delivery stream that uses the Kinesis data stream as a data source. Use AWS Lambda functions to transform the data. Use the Kinesis Data Firehose delivery stream to send the data to Amazon S3.",
            "isCorrect": true
          },
          {
            "answerText": "Configure an Amazon API Gateway API to send data to AWS Glue. Use AWS Lambda functions to transform the data. Use AWS Glue to send the data to Amazon S3.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company needs to keep user transaction data in an Amazon DynamoDB table. The company must retain the data for 7 years. What is the MOST operationally efficient solution that meets these requirements?",
        "explanation": "The most operationally efficient solution is to use AWS Backup to create backup schedules and retention policies for the DynamoDB table, as this automates the long-term retention process. ",
        "answers": [
          {
            "answerText": "Use DynamoDB point-in-time recovery to back up the table continuously.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Backup to create backup schedules and retention policies for the table.",
            "isCorrect": true
          },
          {
            "answerText": "Create an on-demand backup of the table by using the DynamoDB console. Store the backup in an Amazon S3 bucket. Set an S3 Lifecycle configuration for the S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon EventBridge (Amazon CloudWatch Events) rule to invoke an AWS Lambda function. Configure the Lambda function to back up the table and to store the backup in an Amazon S3 bucket. Set an S3 Lifecycle configuration for the S3 bucket.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is planning to use an Amazon DynamoDB table for data storage. The company is concerned about cost optimization. The table will not be used on most mornings. In the evenings, the read and write traffic will often be unpredictable. When traffic spikes occur, they will happen very quickly. What should a solutions architect recommend?",
        "explanation": "This solution is recommended because DynamoDB on-demand capacity mode cost-effectively handles unpredictable, rapidly spiking evening traffic by automatically scaling while minimizing costs during idle morning periods. ",
        "answers": [
          {
            "answerText": "Create a DynamoDB table in on-demand capacity mode.",
            "isCorrect": true
          },
          {
            "answerText": "Create a DynamoDB table with a global secondary index.",
            "isCorrect": false
          },
          {
            "answerText": "Create a DynamoDB table with provisioned capacity and auto scaling.",
            "isCorrect": false
          },
          {
            "answerText": "Create a DynamoDB table in provisioned capacity mode, and configure it as a global table.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company recently signed a contract with an AWS Managed Service Provider (MSP) Partner for help with an application migration initiative. A solutions architect needs ta share an Amazon Machine Image (AMI) from an existing AWS account with the MSP Partner's AWS account. The AMI is backed by Amazon Elastic Block Store (Amazon EBS) and uses an AWS Key Management Service (AWS KMS) customer managed key to encrypt EBS volume snapshots. What is the MOST secure way for the solutions architect to share the AMI with the MSP Partner's AWS account?",
        "explanation": "To securely share an AMI encrypted with a customer-managed KMS key, two primary actions are required: \n1. Modify the AMI's launchPermission property to share the AMI specifically with the MSP Partner's AWS account ID. This allows their account to see and launch instances from your AMI. \n2. Update the key policy of your customer-managed KMS key to grant the MSP Partner's AWS account (or a specific IAM role within their account) the necessary permissions (e.g., kms:Decrypt, kms:ReEncrypt*, kms:DescribeKey, kms:CreateGrant) to use your key for decrypting the snapshots when launching an instance. \nThis combination ensures that only the authorized MSP account can launch the AMI and decrypt its associated snapshots, maintaining security and control.",
        "answers": [
          {
            "answerText": "Make the encrypted AMI and snapshots publicly available. Modify the key policy to allow the MSP Partner's AWS account to use the key.",
            "isCorrect": false
          },
          {
            "answerText": "Modify the launchPermission property of the AMI. Share the AMI with the MSP Partner's AWS account only. Modify the key policy to allow the MSP Partner's AWS account to use the key.",
            "isCorrect": true
          },
          {
            "answerText": "Modify the launchPermission property of the AMI. Share the AMI with the MSP Partner's AWS account only. Modify the key policy to trust a new KMS key that is owned by the MSP Partner for encryption.",
            "isCorrect": false
          },
          {
            "answerText": "Export the AMI from the source account to an Amazon S3 bucket in the MSP Partner's AWS account, Encrypt the S3 bucket with a new KMS key that is owned by the MSP Partner. Copy and launch the AMI in the MSP Partner's AWS account.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A solutions architect is designing the cloud architecture for a new application being deployed on AWS. The process should run in parallel while adding and removing application nodes as needed based on the number of jobs to be processed. The processor application is stateless. The solutions architect must ensure that the application is loosely coupled and the job items are durably stored. Which design should the solutions architect use?",
        "explanation": "This design ensures loose coupling and durable job storage by using an Amazon SQS queue to hold jobs, with an Auto Scaling group of stateless application nodes (launched from an AMI via a launch template) scaling based on the number of items in the SQS queue.",
        "answers": [
          {
            "answerText": "Create an Amazon SNS topic to send the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch configuration that uses the AMI. Create an Auto Scaling group using the launch configuration. Set the scaling policy for the Auto Scaling group to add and remove nodes based on CPU usage.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon SQS queue to hold the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch configuration that uses the AMI. Create an Auto Scaling group using the launch configuration. Set the scaling policy for the Auto Scaling group to add and remove nodes based on network usage.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon SQS queue to hold the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch template that uses the AMI. Create an Auto Scaling group using the launch template. Set the scaling policy for the Auto Scaling group to add and remove nodes based on the number of items in the SQS queue.",
            "isCorrect": true
          },
          {
            "answerText": "Create an Amazon SNS topic to send the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch template that uses the AMI. Create an Auto Scaling group using the launch template. Set the scaling policy for the Auto Scaling group to add and remove nodes based on the number of messages published to the SNS topic.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company hosts its web applications in the AWS Cloud. The company configures Elastic Load Balancers to use certificates that are imported into AWS Certificate Manager (ACM). The company's security team must be notified 30 days before the expiration of each certificate. What should a solutions architect recommend to meet this requirement?",
        "explanation": "B. Create an AWS Config rule that checks for certificates that will expire within 30 days. Configure Amazon EventBridge (Amazon CloudWatch Events) to invoke a custom alert by way of Amazon Simple Notification Service (Amazon SNS) when AWS Config reports a noncompliant resource.\nD. Create an Amazon EventBridge (Amazon CloudWatch Events) rule to detect any certificates that will expire within 30 days. Configure the rule to invoke an AWS Lambda function. Configure the Lambda function to send a custom alert by way of Amazon Simple Notification Service (Amazon SNS).",
        "answers": [
          {
            "answerText": "Add a rule in ACM to publish a custom message to an Amazon Simple Notification Service (Amazon SNS) topic every day, beginning 30 days before any certificate will expire.",
            "isCorrect": false
          },
          {
            "answerText": "Create an AWS Config rule that checks for certificates that will expire within 30 days. Configure Amazon EventBridge (Amazon CloudWatch Events) to invoke a custom alert by way of Amazon Simple Notification Service (Amazon SNS) when AWS Config reports a noncompliant resource.",
            "isCorrect": true
          },
          {
            "answerText": "Use AWS Trusted Advisor to check for certificates that will expire within 30 days. Create an Amazon CloudWatch alarm that is based on Trusted Advisor metrics for check status changes. Configure the alarm to send a custom alert by way of Amazon Simple Notification Service (Amazon SNS).",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon EventBridge (Amazon CloudWatch Events) rule to detect any certificates that will expire within 30 days. Configure the rule to invoke an AWS Lambda function. Configure the Lambda function to send a custom alert by way of Amazon Simple Notification Service (Amazon SNS).",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company's dynamic website is hosted using on-premises servers in the United States. The company is launching its product in Europe, and it wants to optimize site loading times for new European users. The site's backend must remain in the United States. The product is being launched in a few days, and an immediate solution is needed. What should the solutions architect recommend?",
        "explanation": "This solution is best because Amazon CloudFront, configured with a custom origin pointing to the on-premises servers, will cache the website's content at edge locations closer to European users, significantly optimizing site loading times while keeping the backend in the United States. ",
        "answers": [
          {
            "answerText": "Launch an Amazon EC2 instance in us-east-1 and migrate the site to it.",
            "isCorrect": false
          },
          {
            "answerText": "Move the website to Amazon S3. Use Cross-Region Replication between Regions.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon CloudFront with a custom origin pointing to the on-premises servers.",
            "isCorrect": true
          },
          {
            "answerText": "Use an Amazon Route 53 geoproximity routing policy pointing to on-premises servers.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company wants to reduce the cost of its existing three-tier web architecture. The web, application, and database servers are running on Amazon EC2 instances for the development, test, and production environments. The EC2 instances average 30% CPU utilization during peak hours and 10% CPU utilization during non-peak hours. The production EC2 instances run 24 hours a day. The development and test EC2 instances run for at least 8 hours each day. The company plans to implement automation to stop the development and test EC2 instances when they are not in use. Which EC2 instance purchasing solution will meet the company's requirements MOST cost-effectively?",
        "explanation": "This solution is most cost-effective because Reserved Instances offer significant discounts for the continuously running production EC2 instances, while On-Demand Instances provide flexibility for the development and test environments that run for shorter, variable periods and will be stopped when not in use.",
        "answers": [
          {
            "answerText": "Use Spot Instances for the production EC2 instances. Use Reserved Instances for the development and test EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Use Reserved Instances for the production EC2 instances. Use On-Demand Instances for the development and test EC2 instances.",
            "isCorrect": true
          },
          {
            "answerText": "Use Spot blocks for the production EC2 instances. Use Reserved Instances for the development and test EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Use On-Demand Instances for the production EC2 instances. Use Spot blocks for the development and test EC2 instances.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has a production web application in which users upload documents through a web interface or a mobile app. According to a new regulatory requirement. new documents cannot be modified or deleted after they are stored. What should a solutions architect do to meet this requirement?",
        "explanation": "To meet the requirement that new documents cannot be modified or deleted, the solutions architect should store the uploaded documents in an Amazon S3 bucket with S3 Versioning and S3 Object Lock enabled, as Object Lock provides Write-Once-Read-Many (WORM) protection.",
        "answers": [
          {
            "answerText": "Store the uploaded documents in an Amazon S3 bucket with S3 Versioning and S3 Object Lock enabled.",
            "isCorrect": true
          },
          {
            "answerText": "Store the uploaded documents in an Amazon S3 bucket. Configure an S3 Lifecycle policy to archive the documents periodically.",
            "isCorrect": false
          },
          {
            "answerText": "Store the uploaded documents in an Amazon S3 bucket with S3 Versioning enabled. Configure an ACL to restrict all access to read-only.",
            "isCorrect": false
          },
          {
            "answerText": "Store the uploaded documents on an Amazon Elastic File System (Amazon EFS) volume. Access the data by mounting the volume in read only mode.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has several web servers that need to frequently access a common Amazon RDS MySQL Multi-AZ DB instance. The company wants a secure method for the web servers to connect to the database while meeting a security requirement to rotate user credentials frequently. Which solution meets these requirements?",
        "explanation": "This solution meets the requirements by storing the database user credentials in AWS Secrets Manager, which can automatically rotate them frequently, and then granting the web servers the necessary IAM permissions to securely access these secrets.",
        "answers": [
          {
            "answerText": "Store the database user credentials in AWS Secrets Manager. Grant the necessary IAM permissions to allow the web servers to access AWS Secrets Manager.",
            "isCorrect": true
          },
          {
            "answerText": "Store the database user credentials in AWS Systems Manager OpsCenter. Grant the necessary IAM permissions to allow the web servers to access OpsCenter.",
            "isCorrect": false
          },
          {
            "answerText": "Store the database user credentials in a secure Amazon S3 bucket. Grant the necessary IAM permissions to allow the web servers to retrieve credentials and access the database.",
            "isCorrect": false
          },
          {
            "answerText": "Store the database user credentials in files encrypted with AWS Key Management Service (AWS KMS) on the web server file system. The web server should be able to decrypt the files and access the database.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company hosts an application on AWS Lambda functions that are invoked by an Amazon API Gateway API. The Lambda functions save customer data to an Amazon Aurora MySQL database. Whenever the company upgrades the database, the Lambda functions fail to establish database connections until the upgrade is complete. The result is that customer data is not recorded for some of the event. A solutions architect needs to design a solution that stores customer data that is created during database upgrades. Which solution will meet these requirements?",
        "explanation": "This solution effectively prevents data loss during database upgrades by temporarily storing customer data in an Amazon Simple Queue Service (Amazon SQS) FIFO queue, with a separate Lambda function then polling the queue to write the data to the database once it's available.",
        "answers": [
          {
            "answerText": "Provision an Amazon RDS proxy to sit between the Lambda functions and the database. Configure the Lambda functions to connect to the RDS proxy.",
            "isCorrect": false
          },
          {
            "answerText": "Increase the run time of the Lambda functions to the maximum. Create a retry mechanism in the code that stores the customer data in the database.",
            "isCorrect": false
          },
          {
            "answerText": "Persist the customer data to Lambda local storage. Configure new Lambda functions to scan the local storage to save the customer data to the database.",
            "isCorrect": false
          },
          {
            "answerText": "Store the customer data in an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Create a new Lambda function that polls the queue and stores the customer data in the database.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A survey company has gathered data for several years from areas in the United States. The company hosts the data in an Amazon S3 bucket that is 3 TB in size and growing. The company has started to share the data with a European marketing firm that has S3 buckets. The company wants to ensure that its data transfer costs remain as low as possible. Which solution will meet these requirements?",
        "explanation": "These solutions minimize the company's data transfer costs: Requester Pays by directly billing the European firm for data access, and S3 Cross-Region Replication by creating a European copy in the firm's bucket from which they access data, thereby reducing the company's egress charges.",
        "answers": [
          {
            "answerText": "Configure the Requester Pays feature on the company's S3 bucket.",
            "isCorrect": true
          },
          {
            "answerText": "Configure S3 Cross-Region Replication from the company's S3 bucket to one of the marketing firm's S3 buckets.",
            "isCorrect": true
          },
          {
            "answerText": "Configure cross-account access for the marketing firm so that the marketing firm has access to the company's S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Configure the company's S3 bucket to use S3 Intelligent-Tiering. Sync the S3 bucket to one of the marketing firm's S3 buckets.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company uses Amazon S3 to store its confidential audit documents. The S3 bucket uses bucket policies to restrict access to audit team IAM user credentials according to the principle of least privilege. Company managers are worried about accidental deletion of documents in the S3 bucket and want a more secure solution. What should a solutions architect do to secure the audit documents?",
        "explanation": "To secure the audit documents against accidental deletion, the solutions architect should enable S3 Versioning and MFA Delete features on the S3 bucket, which preserves all object versions and requires multi-factor authentication for permanent deletions.",
        "answers": [
          {
            "answerText": "Enable the versioning and MFA Delete features on the S3 bucket.",
            "isCorrect": true
          },
          {
            "answerText": "Enable multi-factor authentication (MFA) on the IAM user credentials for each audit team IAM user account.",
            "isCorrect": false
          },
          {
            "answerText": "Add an S3 Lifecycle policy to the audit team's IAM user accounts to deny the s3:DeleteObject action during audit dates.",
            "isCorrect": false
          },
          {
            "answerText": "Use AWS Key Management Service (AWS KMS) to encrypt the S3 bucket and restrict audit team IAM user accounts from accessing the KMS key.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is using a SQL database to store movie data that is publicly accessible. The database runs on an Amazon RDS Single-AZ DB instance. A script runs queries at random intervals each day to record the number of new movies that have been added to the database. The script must report a final total during business hours. The company's development team notices that the database performance is inadequate for development tasks when the script is running. A solutions architect must recommend a solution to resolve this issue. Which solution will meet this requirement with the LEAST operational overhead?",
        "explanation": "This solution resolves the performance issue with the least operational overhead by creating an Amazon RDS read replica to offload the script's queries, thereby freeing up the primary database for development tasks while still allowing the script to gather its required data.",
        "answers": [
          {
            "answerText": "Modify the DB instance to be a Multi-AZ deployment.",
            "isCorrect": false
          },
          {
            "answerText": "Create a read replica of the database. Configure the script to query only the read replica.",
            "isCorrect": true
          },
          {
            "answerText": "Instruct the development team to manually export the entries in the database at the end of each day.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon ElastiCache to cache the common queries that the script runs against the database.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has applications that run on Amazon EC2 instances in a VPC. One of the applications needs to call the Amazon S3 API to store and read objects. According to the company's security regulations, no traffic from the applications is allowed to travel across the internet. Which solution will meet these requirements?",
        "explanation": "This solution meets the requirements because an S3 gateway endpoint allows EC2 instances in a VPC to privately access Amazon S3 without traffic traversing the internet.",
        "answers": [
          {
            "answerText": "Configure an S3 gateway endpoint.",
            "isCorrect": true
          },
          {
            "answerText": "Create an S3 bucket in a private subnet.",
            "isCorrect": false
          },
          {
            "answerText": "Create an S3 bucket in the same AWS Region as the EC2 instances.",
            "isCorrect": false
          },
          {
            "answerText": "Configure a NAT gateway in the same subnet as the EC2 instances.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is storing sensitive user information in an Amazon S3 bucket. The company wants to provide secure access to this bucket from the application tier running on Amazon EC2 instances inside a VPC. Which combination of steps should a solutions architect take to accomplish this? (Select TWO.)",
        "explanation": "This solution meets the requirements because an S3 gateway endpoint allows EC2 instances in a VPC to privately access Amazon S3 without traffic traversing the internet.",
        "answers": [
          {
            "answerText": "Configure a VPC gateway endpoint for Amazon S3 within the VPC.",
            "isCorrect": true
          },
          {
            "answerText": "Create a bucket policy to make the objects in the S3 bucket public.",
            "isCorrect": false
          },
          {
            "answerText": "Create a bucket policy that limits access to only the application tier running in the VPC.",
            "isCorrect": true
          },
          {
            "answerText": "Create an IAM user with an S3 access policy and copy the IAM credentials to the EC2 instance.",
            "isCorrect": false
          },
          {
            "answerText": "Create a NAT instance and have the EC2 instances use the NAT instance to access the S3 bucket.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company runs an on-premises application that is powered by a MySQL database. The company is migrating the application to AWS to increase the application's elasticity and availability. The current architecture shows heavy read activity on the database during times of normal operation. Every 4 hours, the company's development team pulls a full export of the production database to populate a database in the staging environment. During this period, users experience unacceptable application latency. The development team is unable to use the staging environment until the procedure completes. A solutions architect must recommend replacement architecture that alleviates the application latency issue. The replacement architecture also must give the development team the ability to continue using the staging environment without delay. Which solution meets these requirements?",
        "explanation": "This solution addresses application latency and staging environment delays by using Amazon Aurora MySQL with Multi-AZ Aurora Replicas to handle heavy read activity in production, and employing database cloning to quickly create the staging database on-demand without impacting the production environment.",
        "answers": [
          {
            "answerText": "Use Amazon Aurora MySQL with Multi-AZ Aurora Replicas for production. Populate the staging database by implementing a backup and restore process that uses the mysqldump utility.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon Aurora MySQL with Multi-AZ Aurora Replicas for production. Use database cloning to create the staging database on-demand.",
            "isCorrect": true
          },
          {
            "answerText": "Use Amazon RDS for MySQL with a Multi-AZ deployment and read replicas for production. Use the standby instance for the staging database.",
            "isCorrect": false
          },
          {
            "answerText": "Use Amazon RDS for MySQL with a Multi-AZ deployment and read replicas for production. Populate the staging database by implementing a backup and restore process that uses the mysqldump utility.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is designing an application where users upload small files into Amazon S3. After a user uploads a file, the file requires one-time simple processing to transform the data and save the data in JSON format for later analysis. Each file must be processed as quickly as possible after it is uploaded. Demand will vary. On some days, users will upload a high number of files. On other days, users will upload a few files or no files. Which solution meets these requirements with the LEAST operational overhead?",
        "explanation": "This solution provides the least operational overhead by using Amazon S3 event notifications to an Amazon SQS queue, which then triggers a serverless AWS Lambda function for processing, and stores the resulting JSON in Amazon DynamoDB, all scaling automatically with demand.",
        "answers": [
          {
            "answerText": "Configure Amazon EMR to read text files from Amazon S3. Run processing scripts to transform the data. Store the resulting JSON file in an Amazon Aurora DB cluster.",
            "isCorrect": false
          },
          {
            "answerText": "Configure Amazon S3 to send an event notification to an Amazon Simple Queue Service (Amazon SQS) queue. Use Amazon EC2 instances to read from the queue and process the data. Store the resulting JSON file in Amazon DynamoDB.",
            "isCorrect": false
          },
          {
            "answerText": "Configure Amazon S3 to send an event notification to an Amazon Simple Queue Service (Amazon SQS) queue. Use an AWS Lambda function to read from the queue and process the data. Store the resulting JSON file in Amazon DynamoDB.",
            "isCorrect": true
          },
          {
            "answerText": "Configure Amazon EventBridge (Amazon CloudWatch Events) to send an event to Amazon Kinesis Data Streams when a new file is uploaded. Use an AWS Lambda function to consume the event from the stream and process the data. Store the resulting JSON file in an Amazon Aurora DB cluster.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "An application allows users at a company's headquarters to access product data. The product data is stored in an Amazon RDS MySQL DB instance. The operations team has isolated an application performance slowdown and wants to separate read traffic from write traffic. A solutions architect needs to optimize the application's performance quickly. What should the solutions architect recommend?",
        "explanation": "To quickly optimize performance by separating read and write traffic, the solutions architect should recommend creating Amazon RDS read replicas for the database and configuring them with the same compute and storage resources as the source database to handle the read load effectively.",
        "answers": [
          {
            "answerText": "Change the existing database to a Multi-AZ deployment. Serve the read requests from the primary Availability Zone.",
            "isCorrect": false
          },
          {
            "answerText": "Change the existing database to a Multi-AZ deployment. Serve the read requests from the secondary Availability Zone.",
            "isCorrect": false
          },
          {
            "answerText": "Create read replicas for the database. Configure the read replicas with half of the compute and storage resources as the source database.",
            "isCorrect": false
          },
          {
            "answerText": "Create read replicas for the database. Configure the read replicas with the same compute and storage resources as the source database.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company runs its critical database on an Amazon RDS for PostgreSQL DB instance. The company wants to migrate to Amazon Aurora PostgreSQL with minimal downtime and data loss. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "This solution provides minimal downtime and data loss with the least operational overhead by creating an Aurora read replica of the RDS for PostgreSQL instance and then promoting this replica to become the new primary Aurora PostgreSQL DB cluster.",
        "answers": [
          {
            "answerText": "Create a DB snapshot of the RDS for PostgreSQL DB instance to populate a new Aurora PostgreSQL DB cluster.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Aurora read replica of the RDS for PostgreSQL DB instance. Promote the Aurora read replicate to a new Aurora PostgreSQL DB cluster.",
            "isCorrect": true
          },
          {
            "answerText": "Use data import from Amazon S3 to migrate the database to an Aurora PostgreSQL DB cluster.",
            "isCorrect": false
          },
          {
            "answerText": "Use the pg_dump utility to back up the RDS for PostgreSQL database. Restore the backup to a new Aurora PostgreSQL DB cluster.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company has a large Microsoft SharePoint deployment running on-premises that requires Microsoft Windows shared file storage. The company wants to migrate this workload to the AWS Cloud and is considering various storage options. The storage solution must be highly available and integrated with Active Directory for access control. Which solution will satisfy these requirements?",
        "explanation": "This solution satisfies the requirements by creating an Amazon FSx for Windows File Server file system, which is designed for Windows workloads, provides highly available shared storage, and integrates natively with Active Directory for access control.",
        "answers": [
          {
            "answerText": "Configure Amazon EFS storage and set the Active Directory domain for authentication.",
            "isCorrect": false
          },
          {
            "answerText": "Create an SMB file share on an AWS Storage Gateway file gateway in two Availability Zones.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon S3 bucket and configure Microsoft Windows Server to mount it as a volume.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon FSx for Windows File Server file system on AWS and set the Active Directory domain for authentication.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "An image-processing company has a web application that users use to upload images. The application uploads the images into an Amazon S3 bucket. The company has set up S3 event notifications to publish the object creation events to an Amazon Simple Queue Service (Amazon SQS) standard queue. The SQS queue serves as the event source for an AWS Lambda function that processes the images and sends the results to users through email. Users report that they are receiving multiple email messages for every uploaded image. A solutions architect determines that SQS messages are invoking the Lambda function more than once, resulting in multiple email messages. What should the solutions architect do to resolve this issue with the LEAST operational overhead?",
        "explanation": "To resolve the issue of multiple Lambda invocations with the least operational overhead, the solutions architect should set up long polling in the SQS queue by increasing the ReceiveMessage wait time, which reduces the number of empty receives and the likelihood of processing the same message multiple times by different Lambda invocations.",
        "answers": [
          {
            "answerText": "Set up long polling in the SQS queue by increasing the ReceiveMessage wait time to 30 seconds.",
            "isCorrect": true
          },
          {
            "answerText": "Change the SQS standard queue to an SQS FIFO queue. Use the message deduplication ID to discard duplicate messages.",
            "isCorrect": false
          },
          {
            "answerText": "Increase the visibility timeout in the SQS queue to a value that is greater than the total of the function timeout and the batch window timeout.",
            "isCorrect": false
          },
          {
            "answerText": "Modify the Lambda function to delete each message from the SQS queue immediately after the message is read before processing.",
            "isCorrect": false
          }
        ]
      },
      {
        "questionText": "A company is implementing a shared storage solution for a gaming application that is hosted in an on-premises data center. The company needs the ability to use Lustre clients to access data. The solution must be fully managed. Which solution meets these requirements?",
        "explanation": "This solution meets the requirements by creating an Amazon FSx for Lustre file system, which is a fully managed service specifically designed for Lustre clients, and then connecting the on-premises application server to this file system.",
        "answers": [
          {
            "answerText": "Create an AWS Storage Gateway file gateway. Create a file share that uses the required client protocol. Connect the application server to the file share.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon EC2 Windows instance. Install and configure a Windows file share role on the instance. Connect the application server to the file share.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon Elastic File System (Amazon EFS) file system, and configure it to support Lustre. Attach the file system to the origin server. Connect the application server to the file system.",
            "isCorrect": false
          },
          {
            "answerText": "Create an Amazon FSx for Lustre file system. Attach the file system to the origin server. Connect the application server to the file system.",
            "isCorrect": true
          }
        ]
      },
      {
        "questionText": "A company's containerized application runs on an Amazon EC2 instance. The application needs to download security certificates before it can communicate with other business applications. The company wants a highly secure solution to encrypt and decrypt the certificates in near real time. The solution also needs to store data in highly available storage after the data is encrypted. Which solution will meet these requirements with the LEAST operational overhead?",
        "explanation": "This solution provides the least operational overhead by using an AWS Key Management Service (AWS KMS) customer-managed key for secure encryption and decryption, granting the EC2 role permissions to use this key, and storing the encrypted data on highly available Amazon Elastic Block Store (Amazon EBS) volumes.",
        "answers": [
          {
            "answerText": "Create AWS Secrets Manager secrets for encrypted certificates. Manually update the certificates as needed. Control access to the data by using fine-grained IAM access.",
            "isCorrect": false
          },
          {
            "answerText": "Create an AWS Lambda function that uses the Python cryptography library to receive and perform encryption operations. Store the function in an Amazon S3 bucket.",
            "isCorrect": false
          },
          {
            "answerText": "Create an AWS Key Management Service (AWS KMS) customer managed key. Allow the EC2 role to use the KMS key for encryption operations. Store the encrypted data on Amazon S3.",
            "isCorrect": false
          },
          {
            "answerText": "Create an AWS Key Management Service (AWS KMS) customer managed key. Allow the EC2 role to use the KMS key for encryption operations. Store the encrypted data on Amazon Elastic Block Store (Amazon EBS) volumes.",
            "isCorrect": true
          }
        ]
      }
    ]
  }